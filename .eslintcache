[{"/home/android03/Projects/pms-dashboard/src/index.js":"1","/home/android03/Projects/pms-dashboard/src/store.js":"2","/home/android03/Projects/pms-dashboard/src/reducers/index.js":"3","/home/android03/Projects/pms-dashboard/src/serviceWorker.js":"4","/home/android03/Projects/pms-dashboard/src/App.js":"5","/home/android03/Projects/pms-dashboard/src/polyfill.js":"6","/home/android03/Projects/pms-dashboard/src/reducers/apiResReducers.js":"7","/home/android03/Projects/pms-dashboard/src/reducers/authReducers.js":"8","/home/android03/Projects/pms-dashboard/src/assets/icons/index.js":"9","/home/android03/Projects/pms-dashboard/src/views/pages/page500/Page500.js":"10","/home/android03/Projects/pms-dashboard/src/views/pages/page404/Page404.js":"11","/home/android03/Projects/pms-dashboard/src/views/pages/reset/Reset.js":"12","/home/android03/Projects/pms-dashboard/src/actions/types.js":"13","/home/android03/Projects/pms-dashboard/src/assets/icons/logo-negative.js":"14","/home/android03/Projects/pms-dashboard/src/assets/icons/sygnet.js":"15","/home/android03/Projects/pms-dashboard/src/assets/icons/logo.js":"16","/home/android03/Projects/pms-dashboard/src/actions/authActions.js":"17","/home/android03/Projects/pms-dashboard/src/utils/setAuthToken.js":"18","/home/android03/Projects/pms-dashboard/src/views/pages/login/Login.js":"19","/home/android03/Projects/pms-dashboard/src/views/private-route/PrivateRoute.js":"20","/home/android03/Projects/pms-dashboard/src/views/pages/forgot/Forgot.js":"21","/home/android03/Projects/pms-dashboard/src/containers/TheLayout.js":"22","/home/android03/Projects/pms-dashboard/src/views/pages/login/Logout.js":"23","/home/android03/Projects/pms-dashboard/src/containers/Loader.js":"24","/home/android03/Projects/pms-dashboard/src/containers/index.js":"25","/home/android03/Projects/pms-dashboard/src/containers/TheContent.js":"26","/home/android03/Projects/pms-dashboard/src/containers/TheFooter.js":"27","/home/android03/Projects/pms-dashboard/src/containers/TheHeader.js":"28","/home/android03/Projects/pms-dashboard/src/containers/TheHeaderDropdown.js":"29","/home/android03/Projects/pms-dashboard/src/containers/TheSidebar.js":"30","/home/android03/Projects/pms-dashboard/src/routes.js":"31","/home/android03/Projects/pms-dashboard/src/containers/_nav.js":"32","/home/android03/Projects/pms-dashboard/src/views/dashboard/Dashboard.js":"33","/home/android03/Projects/pms-dashboard/src/views/changepassword/Changepassword.js":"34","/home/android03/Projects/pms-dashboard/src/views/emailtemplates/Index.js":"35","/home/android03/Projects/pms-dashboard/src/views/emailtemplates/Edit.js":"36","/home/android03/Projects/pms-dashboard/src/views/technologies/Index.js":"37","/home/android03/Projects/pms-dashboard/src/views/department/Index.js":"38","/home/android03/Projects/pms-dashboard/src/views/technologies/Edit.js":"39","/home/android03/Projects/pms-dashboard/src/views/technologies/Add.js":"40","/home/android03/Projects/pms-dashboard/src/views/department/Add.js":"41","/home/android03/Projects/pms-dashboard/src/views/department/Edit.js":"42","/home/android03/Projects/pms-dashboard/src/views/skill/Index.js":"43","/home/android03/Projects/pms-dashboard/src/views/skill/Add.js":"44","/home/android03/Projects/pms-dashboard/src/views/skill/Edit.js":"45","/home/android03/Projects/pms-dashboard/src/views/designation/Index.js":"46","/home/android03/Projects/pms-dashboard/src/views/designation/Add.js":"47","/home/android03/Projects/pms-dashboard/src/views/designation/Edit.js":"48","/home/android03/Projects/pms-dashboard/src/views/users/Index.js":"49","/home/android03/Projects/pms-dashboard/src/actions/changepassActions.js":"50","/home/android03/Projects/pms-dashboard/src/actions/emailtempActions.js":"51","/home/android03/Projects/pms-dashboard/src/actions/technologiesActions.js":"52","/home/android03/Projects/pms-dashboard/src/actions/departmentActions.js":"53","/home/android03/Projects/pms-dashboard/src/actions/designationActions.js":"54","/home/android03/Projects/pms-dashboard/src/actions/skillActions.js":"55","/home/android03/Projects/pms-dashboard/src/actions/usersActions.js":"56","/home/android03/Projects/pms-dashboard/src/views/charts/ChartBarSimple.js":"57","/home/android03/Projects/pms-dashboard/src/views/charts/ChartLineSimple.js":"58","/home/android03/Projects/pms-dashboard/src/views/users/Add.js":"59","/home/android03/Projects/pms-dashboard/src/views/users/Edit.js":"60","/home/android03/Projects/pms-dashboard/src/views/client/Edit.js":"61","/home/android03/Projects/pms-dashboard/src/views/client/Index.js":"62","/home/android03/Projects/pms-dashboard/src/views/client/Add.js":"63","/home/android03/Projects/pms-dashboard/src/actions/clientActions.js":"64","/home/android03/Projects/pms-dashboard/src/views/project/Index.js":"65","/home/android03/Projects/pms-dashboard/src/views/project/Add.js":"66","/home/android03/Projects/pms-dashboard/src/views/project/Edit.js":"67","/home/android03/Projects/pms-dashboard/src/actions/projectActions.js":"68","/home/android03/Projects/pms-dashboard/src/views/users/Assign.js":"69","/home/android03/Projects/pms-dashboard/src/views/users/Detail.js":"70","/home/android03/Projects/pms-dashboard/src/views/users/Skill.js":"71","/home/android03/Projects/pms-dashboard/src/views/project/Detail.js":"72","/home/android03/Projects/pms-dashboard/src/views/project/Assign.js":"73","/home/android03/Projects/pms-dashboard/src/views/project/Assignuser.js":"74","/home/android03/Projects/pms-dashboard/src/views/project/Clientdetail.js":"75","/home/android03/Projects/pms-dashboard/src/views/project/Milestone.js":"76","/home/android03/Projects/pms-dashboard/src/constants/index.js":"77","/home/android03/Arpit/pms-dashboard/src/index.js":"78","/home/android03/Arpit/pms-dashboard/src/store.js":"79","/home/android03/Arpit/pms-dashboard/src/reducers/index.js":"80","/home/android03/Arpit/pms-dashboard/src/serviceWorker.js":"81","/home/android03/Arpit/pms-dashboard/src/App.js":"82","/home/android03/Arpit/pms-dashboard/src/polyfill.js":"83","/home/android03/Arpit/pms-dashboard/src/reducers/apiResReducers.js":"84","/home/android03/Arpit/pms-dashboard/src/reducers/authReducers.js":"85","/home/android03/Arpit/pms-dashboard/src/assets/icons/index.js":"86","/home/android03/Arpit/pms-dashboard/src/views/pages/page500/Page500.js":"87","/home/android03/Arpit/pms-dashboard/src/views/pages/page404/Page404.js":"88","/home/android03/Arpit/pms-dashboard/src/views/pages/forgot/Forgot.js":"89","/home/android03/Arpit/pms-dashboard/src/views/pages/reset/Reset.js":"90","/home/android03/Arpit/pms-dashboard/src/actions/types.js":"91","/home/android03/Arpit/pms-dashboard/src/assets/icons/logo-negative.js":"92","/home/android03/Arpit/pms-dashboard/src/assets/icons/sygnet.js":"93","/home/android03/Arpit/pms-dashboard/src/assets/icons/logo.js":"94","/home/android03/Arpit/pms-dashboard/src/actions/authActions.js":"95","/home/android03/Arpit/pms-dashboard/src/utils/setAuthToken.js":"96","/home/android03/Arpit/pms-dashboard/src/constants/index.js":"97","/home/android03/Arpit/pms-dashboard/src/views/pages/login/Login.js":"98","/home/android03/Arpit/pms-dashboard/src/views/pages/login/Logout.js":"99","/home/android03/Arpit/pms-dashboard/src/containers/TheLayout.js":"100","/home/android03/Arpit/pms-dashboard/src/views/private-route/PrivateRoute.js":"101","/home/android03/Arpit/pms-dashboard/src/containers/index.js":"102","/home/android03/Arpit/pms-dashboard/src/containers/TheFooter.js":"103","/home/android03/Arpit/pms-dashboard/src/containers/TheContent.js":"104","/home/android03/Arpit/pms-dashboard/src/containers/TheHeaderDropdown.js":"105","/home/android03/Arpit/pms-dashboard/src/containers/TheHeader.js":"106","/home/android03/Arpit/pms-dashboard/src/containers/TheSidebar.js":"107","/home/android03/Arpit/pms-dashboard/src/containers/_nav.js":"108","/home/android03/Arpit/pms-dashboard/src/routes.js":"109","/home/android03/Arpit/pms-dashboard/src/views/dashboard/Dashboard.js":"110","/home/android03/Arpit/pms-dashboard/src/views/emailtemplates/Index.js":"111","/home/android03/Arpit/pms-dashboard/src/views/emailtemplates/Edit.js":"112","/home/android03/Arpit/pms-dashboard/src/views/technologies/Index.js":"113","/home/android03/Arpit/pms-dashboard/src/views/technologies/Edit.js":"114","/home/android03/Arpit/pms-dashboard/src/views/technologies/Add.js":"115","/home/android03/Arpit/pms-dashboard/src/views/department/Index.js":"116","/home/android03/Arpit/pms-dashboard/src/views/department/Add.js":"117","/home/android03/Arpit/pms-dashboard/src/views/skill/Index.js":"118","/home/android03/Arpit/pms-dashboard/src/views/department/Edit.js":"119","/home/android03/Arpit/pms-dashboard/src/views/skill/Add.js":"120","/home/android03/Arpit/pms-dashboard/src/views/designation/Index.js":"121","/home/android03/Arpit/pms-dashboard/src/views/skill/Edit.js":"122","/home/android03/Arpit/pms-dashboard/src/views/designation/Add.js":"123","/home/android03/Arpit/pms-dashboard/src/views/designation/Edit.js":"124","/home/android03/Arpit/pms-dashboard/src/views/client/Index.js":"125","/home/android03/Arpit/pms-dashboard/src/views/client/Edit.js":"126","/home/android03/Arpit/pms-dashboard/src/views/client/Add.js":"127","/home/android03/Arpit/pms-dashboard/src/views/project/Edit.js":"128","/home/android03/Arpit/pms-dashboard/src/views/project/Assignuser.js":"129","/home/android03/Arpit/pms-dashboard/src/views/project/Index.js":"130","/home/android03/Arpit/pms-dashboard/src/views/project/Detail.js":"131","/home/android03/Arpit/pms-dashboard/src/views/project/Assign.js":"132","/home/android03/Arpit/pms-dashboard/src/views/project/Clientdetail.js":"133","/home/android03/Arpit/pms-dashboard/src/views/project/Milestone.js":"134","/home/android03/Arpit/pms-dashboard/src/views/project/Add.js":"135","/home/android03/Arpit/pms-dashboard/src/views/users/Index.js":"136","/home/android03/Arpit/pms-dashboard/src/views/users/Add.js":"137","/home/android03/Arpit/pms-dashboard/src/views/users/Edit.js":"138","/home/android03/Arpit/pms-dashboard/src/views/users/Assign.js":"139","/home/android03/Arpit/pms-dashboard/src/views/users/Detail.js":"140","/home/android03/Arpit/pms-dashboard/src/views/changepassword/Changepassword.js":"141","/home/android03/Arpit/pms-dashboard/src/views/users/Skill.js":"142","/home/android03/Arpit/pms-dashboard/src/actions/emailtempActions.js":"143","/home/android03/Arpit/pms-dashboard/src/actions/technologiesActions.js":"144","/home/android03/Arpit/pms-dashboard/src/actions/departmentActions.js":"145","/home/android03/Arpit/pms-dashboard/src/actions/usersActions.js":"146","/home/android03/Arpit/pms-dashboard/src/actions/projectActions.js":"147","/home/android03/Arpit/pms-dashboard/src/actions/changepassActions.js":"148","/home/android03/Arpit/pms-dashboard/src/actions/designationActions.js":"149","/home/android03/Arpit/pms-dashboard/src/actions/clientActions.js":"150","/home/android03/Arpit/pms-dashboard/src/actions/skillActions.js":"151","/home/android03/Arpit/pms-dashboard/src/views/charts/ChartLineSimple.js":"152","/home/android03/Arpit/pms-dashboard/src/views/charts/ChartBarSimple.js":"153"},{"size":735,"mtime":1615362852567,"results":"154","hashOfConfig":"155"},{"size":790,"mtime":1615362852567,"results":"156","hashOfConfig":"155"},{"size":214,"mtime":1615362852567,"results":"157","hashOfConfig":"155"},{"size":4686,"mtime":1616485084606,"results":"158","hashOfConfig":"155"},{"size":7026,"mtime":1617197246009,"results":"159","hashOfConfig":"155"},{"size":1895,"mtime":1615362852567,"results":"160","hashOfConfig":"155"},{"size":341,"mtime":1615362852567,"results":"161","hashOfConfig":"155"},{"size":987,"mtime":1615362852567,"results":"162","hashOfConfig":"155"},{"size":3813,"mtime":1615362852567,"results":"163","hashOfConfig":"155"},{"size":1313,"mtime":1615362852615,"results":"164","hashOfConfig":"155"},{"size":1294,"mtime":1615362852615,"results":"165","hashOfConfig":"155"},{"size":5047,"mtime":1615362852619,"results":"166","hashOfConfig":"155"},{"size":257,"mtime":1615362852567,"results":"167","hashOfConfig":"155"},{"size":6933,"mtime":1615362852567,"results":"168","hashOfConfig":"155"},{"size":978,"mtime":1615362852567,"results":"169","hashOfConfig":"155"},{"size":6920,"mtime":1615362852567,"results":"170","hashOfConfig":"155"},{"size":4309,"mtime":1627147614271,"results":"171","hashOfConfig":"155"},{"size":253,"mtime":1615362852567,"results":"172","hashOfConfig":"155"},{"size":5257,"mtime":1627147129782,"results":"173","hashOfConfig":"155"},{"size":644,"mtime":1616578656526,"results":"174","hashOfConfig":"155"},{"size":4145,"mtime":1615362852615,"results":"175","hashOfConfig":"155"},{"size":412,"mtime":1616591990273,"results":"176","hashOfConfig":"155"},{"size":1052,"mtime":1615362852703,"results":"177","hashOfConfig":"155"},{"size":324,"mtime":1611061593845,"results":"178","hashOfConfig":"179"},{"size":335,"mtime":1615362852567,"results":"180","hashOfConfig":"155"},{"size":1091,"mtime":1615362852567,"results":"181","hashOfConfig":"155"},{"size":332,"mtime":1615362852567,"results":"182","hashOfConfig":"155"},{"size":1581,"mtime":1615362852567,"results":"183","hashOfConfig":"155"},{"size":1472,"mtime":1615362852567,"results":"184","hashOfConfig":"155"},{"size":1242,"mtime":1627143453221,"results":"185","hashOfConfig":"155"},{"size":5141,"mtime":1615362852703,"results":"186","hashOfConfig":"155"},{"size":13606,"mtime":1615362852707,"results":"187","hashOfConfig":"155"},{"size":3340,"mtime":1615362852607,"results":"188","hashOfConfig":"155"},{"size":4882,"mtime":1615362852571,"results":"189","hashOfConfig":"155"},{"size":2406,"mtime":1615362852611,"results":"190","hashOfConfig":"155"},{"size":4946,"mtime":1615362852611,"results":"191","hashOfConfig":"155"},{"size":4981,"mtime":1619422933278,"results":"192","hashOfConfig":"155"},{"size":4147,"mtime":1615362852611,"results":"193","hashOfConfig":"155"},{"size":4412,"mtime":1615362852651,"results":"194","hashOfConfig":"155"},{"size":4038,"mtime":1615362852639,"results":"195","hashOfConfig":"155"},{"size":3542,"mtime":1615362852607,"results":"196","hashOfConfig":"155"},{"size":4144,"mtime":1615362852611,"results":"197","hashOfConfig":"155"},{"size":4042,"mtime":1615362852631,"results":"198","hashOfConfig":"155"},{"size":3507,"mtime":1615362852631,"results":"199","hashOfConfig":"155"},{"size":4077,"mtime":1615362852631,"results":"200","hashOfConfig":"155"},{"size":4153,"mtime":1615362852611,"results":"201","hashOfConfig":"155"},{"size":3543,"mtime":1615362852611,"results":"202","hashOfConfig":"155"},{"size":4143,"mtime":1615362852611,"results":"203","hashOfConfig":"155"},{"size":6287,"mtime":1617798880115,"results":"204","hashOfConfig":"155"},{"size":755,"mtime":1615362852563,"results":"205","hashOfConfig":"155"},{"size":1235,"mtime":1615362852563,"results":"206","hashOfConfig":"155"},{"size":3306,"mtime":1615362852567,"results":"207","hashOfConfig":"155"},{"size":2588,"mtime":1615362852563,"results":"208","hashOfConfig":"155"},{"size":2590,"mtime":1615362852563,"results":"209","hashOfConfig":"155"},{"size":2530,"mtime":1615362852563,"results":"210","hashOfConfig":"155"},{"size":4973,"mtime":1623040827039,"results":"211","hashOfConfig":"155"},{"size":1545,"mtime":1615362852571,"results":"212","hashOfConfig":"155"},{"size":3294,"mtime":1615362852571,"results":"213","hashOfConfig":"155"},{"size":7672,"mtime":1615383336908,"results":"214","hashOfConfig":"155"},{"size":9453,"mtime":1615362852675,"results":"215","hashOfConfig":"155"},{"size":6988,"mtime":1615362852599,"results":"216","hashOfConfig":"155"},{"size":5583,"mtime":1615901489275,"results":"217","hashOfConfig":"155"},{"size":5285,"mtime":1615362852591,"results":"218","hashOfConfig":"155"},{"size":6638,"mtime":1615543131569,"results":"219","hashOfConfig":"155"},{"size":6431,"mtime":1615529805403,"results":"220","hashOfConfig":"155"},{"size":7017,"mtime":1615362852691,"results":"221","hashOfConfig":"155"},{"size":8714,"mtime":1615362852691,"results":"222","hashOfConfig":"155"},{"size":7298,"mtime":1615528841519,"results":"223","hashOfConfig":"155"},{"size":7447,"mtime":1615362852659,"results":"224","hashOfConfig":"155"},{"size":11499,"mtime":1615362852679,"results":"225","hashOfConfig":"155"},{"size":8406,"mtime":1615362852671,"results":"226","hashOfConfig":"155"},{"size":11264,"mtime":1615383338940,"results":"227","hashOfConfig":"155"},{"size":7127,"mtime":1615362852631,"results":"228","hashOfConfig":"155"},{"size":7515,"mtime":1614848021222,"results":"229","hashOfConfig":"155"},{"size":5439,"mtime":1614941725836,"results":"230","hashOfConfig":"155"},{"size":9395,"mtime":1615291116689,"results":"231","hashOfConfig":"155"},{"size":105,"mtime":1627142750142,"results":"232","hashOfConfig":"155"},{"size":735,"mtime":1615362852567,"results":"233","hashOfConfig":"234"},{"size":790,"mtime":1615362852567,"results":"235","hashOfConfig":"234"},{"size":214,"mtime":1615362852567,"results":"236","hashOfConfig":"234"},{"size":4686,"mtime":1616485084606,"results":"237","hashOfConfig":"234"},{"size":7026,"mtime":1617197246009,"results":"238","hashOfConfig":"234"},{"size":1895,"mtime":1615362852567,"results":"239","hashOfConfig":"234"},{"size":341,"mtime":1615362852567,"results":"240","hashOfConfig":"234"},{"size":987,"mtime":1615362852567,"results":"241","hashOfConfig":"234"},{"size":3813,"mtime":1615362852567,"results":"242","hashOfConfig":"234"},{"size":1313,"mtime":1615362852615,"results":"243","hashOfConfig":"234"},{"size":1294,"mtime":1615362852615,"results":"244","hashOfConfig":"234"},{"size":4145,"mtime":1615362852615,"results":"245","hashOfConfig":"234"},{"size":5047,"mtime":1615362852619,"results":"246","hashOfConfig":"234"},{"size":257,"mtime":1615362852567,"results":"247","hashOfConfig":"234"},{"size":6933,"mtime":1615362852567,"results":"248","hashOfConfig":"234"},{"size":978,"mtime":1615362852567,"results":"249","hashOfConfig":"234"},{"size":6920,"mtime":1615362852567,"results":"250","hashOfConfig":"234"},{"size":4335,"mtime":1627204533074,"results":"251","hashOfConfig":"234"},{"size":253,"mtime":1615362852567,"results":"252","hashOfConfig":"234"},{"size":105,"mtime":1627142750142,"results":"253","hashOfConfig":"234"},{"size":5236,"mtime":1627207434746,"results":"254","hashOfConfig":"234"},{"size":1052,"mtime":1615362852703,"results":"255","hashOfConfig":"234"},{"size":412,"mtime":1616591990273,"results":"256","hashOfConfig":"234"},{"size":644,"mtime":1616578656526,"results":"257","hashOfConfig":"234"},{"size":335,"mtime":1615362852567,"results":"258","hashOfConfig":"234"},{"size":332,"mtime":1615362852567,"results":"259","hashOfConfig":"234"},{"size":1091,"mtime":1615362852567,"results":"260","hashOfConfig":"234"},{"size":1472,"mtime":1615362852567,"results":"261","hashOfConfig":"234"},{"size":1581,"mtime":1615362852567,"results":"262","hashOfConfig":"234"},{"size":1242,"mtime":1627143453221,"results":"263","hashOfConfig":"234"},{"size":15221,"mtime":1627209153581,"results":"264","hashOfConfig":"234"},{"size":5141,"mtime":1615362852703,"results":"265","hashOfConfig":"234"},{"size":3340,"mtime":1615362852607,"results":"266","hashOfConfig":"234"},{"size":2406,"mtime":1615362852611,"results":"267","hashOfConfig":"234"},{"size":4946,"mtime":1615362852611,"results":"268","hashOfConfig":"234"},{"size":4981,"mtime":1619422933278,"results":"269","hashOfConfig":"234"},{"size":4412,"mtime":1615362852651,"results":"270","hashOfConfig":"234"},{"size":4038,"mtime":1615362852639,"results":"271","hashOfConfig":"234"},{"size":4147,"mtime":1615362852611,"results":"272","hashOfConfig":"234"},{"size":3542,"mtime":1615362852607,"results":"273","hashOfConfig":"234"},{"size":4042,"mtime":1615362852631,"results":"274","hashOfConfig":"234"},{"size":4144,"mtime":1615362852611,"results":"275","hashOfConfig":"234"},{"size":3507,"mtime":1615362852631,"results":"276","hashOfConfig":"234"},{"size":4153,"mtime":1615362852611,"results":"277","hashOfConfig":"234"},{"size":4077,"mtime":1615362852631,"results":"278","hashOfConfig":"234"},{"size":3543,"mtime":1615362852611,"results":"279","hashOfConfig":"234"},{"size":4143,"mtime":1615362852611,"results":"280","hashOfConfig":"234"},{"size":5583,"mtime":1615901489275,"results":"281","hashOfConfig":"234"},{"size":6988,"mtime":1615362852599,"results":"282","hashOfConfig":"234"},{"size":5285,"mtime":1615362852591,"results":"283","hashOfConfig":"234"},{"size":8714,"mtime":1615362852691,"results":"284","hashOfConfig":"234"},{"size":7515,"mtime":1614848021222,"results":"285","hashOfConfig":"234"},{"size":6431,"mtime":1615529805403,"results":"286","hashOfConfig":"234"},{"size":11264,"mtime":1615383338940,"results":"287","hashOfConfig":"234"},{"size":7127,"mtime":1615362852631,"results":"288","hashOfConfig":"234"},{"size":5439,"mtime":1614941725836,"results":"289","hashOfConfig":"234"},{"size":9395,"mtime":1615291116689,"results":"290","hashOfConfig":"234"},{"size":7017,"mtime":1615362852691,"results":"291","hashOfConfig":"234"},{"size":6373,"mtime":1627391412388,"results":"292","hashOfConfig":"234"},{"size":7672,"mtime":1615383336908,"results":"293","hashOfConfig":"234"},{"size":9453,"mtime":1615362852675,"results":"294","hashOfConfig":"234"},{"size":7447,"mtime":1615362852659,"results":"295","hashOfConfig":"234"},{"size":11499,"mtime":1615362852679,"results":"296","hashOfConfig":"234"},{"size":4882,"mtime":1615362852571,"results":"297","hashOfConfig":"234"},{"size":8406,"mtime":1615362852671,"results":"298","hashOfConfig":"234"},{"size":1235,"mtime":1615362852563,"results":"299","hashOfConfig":"234"},{"size":3306,"mtime":1615362852567,"results":"300","hashOfConfig":"234"},{"size":2588,"mtime":1615362852563,"results":"301","hashOfConfig":"234"},{"size":5692,"mtime":1627235864651,"results":"302","hashOfConfig":"234"},{"size":7298,"mtime":1615528841519,"results":"303","hashOfConfig":"234"},{"size":755,"mtime":1615362852563,"results":"304","hashOfConfig":"234"},{"size":2590,"mtime":1615362852563,"results":"305","hashOfConfig":"234"},{"size":6638,"mtime":1615543131569,"results":"306","hashOfConfig":"234"},{"size":2530,"mtime":1615362852563,"results":"307","hashOfConfig":"234"},{"size":3294,"mtime":1615362852571,"results":"308","hashOfConfig":"234"},{"size":1545,"mtime":1615362852571,"results":"309","hashOfConfig":"234"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"312"},"1o79476",{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"312"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"312"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"312"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"312"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"312"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"325","usedDeprecatedRules":"312"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"328","usedDeprecatedRules":"312"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"312"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"312"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"312"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"312"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"312"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"312"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"312"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"312"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"312"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"312"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"312"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"312"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"312"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"361"},"1sd1ogw",{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"312"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"312"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"312"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"312"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"312"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"374","messages":"375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"312"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"312"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"312"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"312"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"312"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"312"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"388","usedDeprecatedRules":"312"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"312"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"393","usedDeprecatedRules":"312"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"312"},{"filePath":"396","messages":"397","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"312"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"312"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"312"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"312"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"312"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"312"},{"filePath":"408","messages":"409","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"312"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"312"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"414","usedDeprecatedRules":"312"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"312"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"312"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"312"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"312"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"312"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"312"},{"filePath":"427","messages":"428","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"429","usedDeprecatedRules":"312"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"312"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"312"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"312"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"438","usedDeprecatedRules":"312"},{"filePath":"439","messages":"440","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"441","usedDeprecatedRules":"312"},{"filePath":"442","messages":"443","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"444","usedDeprecatedRules":"312"},{"filePath":"445","messages":"446","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"447","usedDeprecatedRules":"312"},{"filePath":"448","messages":"449","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"450","usedDeprecatedRules":"312"},{"filePath":"451","messages":"452","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"453","usedDeprecatedRules":"312"},{"filePath":"454","messages":"455","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"456","usedDeprecatedRules":"312"},{"filePath":"457","messages":"458","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"459","usedDeprecatedRules":"312"},{"filePath":"460","messages":"461","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"462","usedDeprecatedRules":"312"},{"filePath":"463","messages":"464","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"465","usedDeprecatedRules":"312"},{"filePath":"466","messages":"467","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"468","usedDeprecatedRules":"312"},{"filePath":"469","messages":"470","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"471","usedDeprecatedRules":"312"},{"filePath":"472","messages":"473","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"474","usedDeprecatedRules":"312"},{"filePath":"475","messages":"476","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"477","usedDeprecatedRules":"312"},{"filePath":"478","messages":"479","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"480","usedDeprecatedRules":"312"},{"filePath":"481","messages":"482","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"483","usedDeprecatedRules":"312"},{"filePath":"484","messages":"485","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"486","usedDeprecatedRules":"312"},{"filePath":"487","messages":"488","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"489","messages":"490","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1nyemx0",{"filePath":"491","messages":"492","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"493","messages":"494","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"495","messages":"496","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"497","messages":"498","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"499","messages":"500","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"501","messages":"502","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"503","messages":"504","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"505","messages":"506","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"507","messages":"508","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"509","messages":"510","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"511","messages":"512","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"513","messages":"514","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"515","messages":"516","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"517","messages":"518","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"519","messages":"520","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"521","messages":"522","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"523","messages":"524","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"525","messages":"526","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"527","messages":"528","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"529","messages":"530","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"531","messages":"532","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"533","messages":"534","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"535","messages":"536","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"537","messages":"538","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"539","messages":"540","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"541","messages":"542","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"543","messages":"544","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"545","messages":"546","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"547","messages":"548","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"549","messages":"550","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"551","messages":"552","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"553","messages":"554","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"555","messages":"556","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"557","messages":"558","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"559","messages":"560","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"561","messages":"562","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"563","messages":"564","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"565","messages":"566","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"567","messages":"568","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"569","messages":"570","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"571","messages":"572","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"573","messages":"574","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"575","messages":"576","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"577","messages":"578","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"579","messages":"580","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"581","messages":"582","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"583","messages":"584","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"585","messages":"586","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"587","messages":"588","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"589","messages":"590","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"591","messages":"592","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"593","messages":"594","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"595","messages":"596","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"597","messages":"598","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"599","messages":"600","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"601","messages":"602","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"603","messages":"604","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"605","messages":"606","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"607","messages":"608","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"609","messages":"610","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"611","messages":"612","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"613","messages":"614","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"615","messages":"616","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"617","messages":"618","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"619","messages":"620","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"621","messages":"622","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"623","messages":"624","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"625","messages":"626","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"627","messages":"628","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"629","messages":"630","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"631","messages":"632","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"633","messages":"634","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"635","messages":"636","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"637","messages":"638","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"639","messages":"640","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/android03/Projects/pms-dashboard/src/index.js",[],["641","642"],"/home/android03/Projects/pms-dashboard/src/store.js",[],"/home/android03/Projects/pms-dashboard/src/reducers/index.js",[],"/home/android03/Projects/pms-dashboard/src/serviceWorker.js",[],"/home/android03/Projects/pms-dashboard/src/App.js",[],"/home/android03/Projects/pms-dashboard/src/polyfill.js",[],"/home/android03/Projects/pms-dashboard/src/reducers/apiResReducers.js",["643"],"import { GET_SUCCESS, GET_ERRORS } from \"../actions/types\";\nconst initialState = {};\n\nexport default function(state = initialState, action) {\n    switch (action.type) {\n        case GET_SUCCESS:\n            return action.payload;\n        case GET_ERRORS:\n            return action.payload;\n        default:\n            return state;\n    }\n}\n","/home/android03/Projects/pms-dashboard/src/reducers/authReducers.js",["644"],"import {\n    SET_CURRENT_USER,\n    USER_ADD,\n    USER_LOADING,\n    USER_UPDATE\n} from \"../actions/types\";\nconst isEmpty = require(\"is-empty\");\nconst initialState = {\n    isAuthenticated: false,\n    user: {},\n    loading: false,\n};\nexport default function(state = initialState, action) {\n    switch (action.type) {\n        case USER_ADD:\n            return {\n                isAuthenticated: !isEmpty(action.payload),\n                user: action.payload\n            };\n        case USER_UPDATE:\n            return {\n                isAuthenticated: !isEmpty(action.payload),\n                user: action.payload,\n            };\n        case SET_CURRENT_USER:\n            return {\n                ...state,\n                isAuthenticated: !isEmpty(action.payload),\n                user: action.payload\n            };\n        case USER_LOADING:\n            return {\n                ...state,\n                loading: true\n            };\n        default:\n            return state;\n    }\n}\n","/home/android03/Projects/pms-dashboard/src/assets/icons/index.js",[],"/home/android03/Projects/pms-dashboard/src/views/pages/page500/Page500.js",[],"/home/android03/Projects/pms-dashboard/src/views/pages/page404/Page404.js",[],"/home/android03/Projects/pms-dashboard/src/views/pages/reset/Reset.js",[],"/home/android03/Projects/pms-dashboard/src/actions/types.js",[],"/home/android03/Projects/pms-dashboard/src/assets/icons/logo-negative.js",[],"/home/android03/Projects/pms-dashboard/src/assets/icons/sygnet.js",[],"/home/android03/Projects/pms-dashboard/src/assets/icons/logo.js",[],"/home/android03/Projects/pms-dashboard/src/actions/authActions.js",[],"/home/android03/Projects/pms-dashboard/src/utils/setAuthToken.js",[],"/home/android03/Projects/pms-dashboard/src/views/pages/login/Login.js",[],"/home/android03/Projects/pms-dashboard/src/views/private-route/PrivateRoute.js",[],"/home/android03/Projects/pms-dashboard/src/views/pages/forgot/Forgot.js",[],"/home/android03/Projects/pms-dashboard/src/containers/TheLayout.js",[],"/home/android03/Projects/pms-dashboard/src/views/pages/login/Logout.js",[],"/home/android03/Projects/pms-dashboard/src/containers/Loader.js",[],["645","646"],"/home/android03/Projects/pms-dashboard/src/containers/index.js",[],"/home/android03/Projects/pms-dashboard/src/containers/TheContent.js",[],"/home/android03/Projects/pms-dashboard/src/containers/TheFooter.js",[],"/home/android03/Projects/pms-dashboard/src/containers/TheHeader.js",[],"/home/android03/Projects/pms-dashboard/src/containers/TheHeaderDropdown.js",[],"/home/android03/Projects/pms-dashboard/src/containers/TheSidebar.js",[],"/home/android03/Projects/pms-dashboard/src/routes.js",[],"/home/android03/Projects/pms-dashboard/src/containers/_nav.js",[],"/home/android03/Projects/pms-dashboard/src/views/dashboard/Dashboard.js",[],"/home/android03/Projects/pms-dashboard/src/views/changepassword/Changepassword.js",[],"/home/android03/Projects/pms-dashboard/src/views/emailtemplates/Index.js",[],"/home/android03/Projects/pms-dashboard/src/views/emailtemplates/Edit.js",[],"/home/android03/Projects/pms-dashboard/src/views/technologies/Index.js",["647"],"import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport store from \"./../../store\";\nimport jwt_decode from \"jwt-decode\";\nimport { logoutUser } from \"./../../actions/authActions\";\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CDataTable,\n  CRow,\n  CButton,\n  CForm,\n  CFormGroup,\n  CInput,\n  CLabel,\n} from '@coreui/react'\n\nimport { listTechnologies, deleteTechnologies } from \"../../actions/technologiesActions\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nvar techData = [];\n\nclass Technologies extends Component {\n  constructor() {\n    super();\n    this.state = {\n      token: \"\",\n      filter: \"\",\n    };\n  }\n\n  componentDidMount() {\n    if(localStorage.jwtToken)\n    { \n      const token = localStorage.jwtToken;\n      const decoded = jwt_decode(token);\n\n      this.setState({ token: decoded.token });\n\n      this.listTechno(decoded.token);\n    }else{\n      store.dispatch(logoutUser());\n      this.props.history.push(\"/login\");\n    }\n  };\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.apiRes) {\n      if(nextProps.apiRes.status === 200)\n      {\n        if(nextProps.apiRes.data.message == null)\n        {\n          techData = [];\n          var data = nextProps.apiRes.data;\n\n          for (var i = 0; i < data.length; i++) {\n            var j = i+1;\n            var dataArr = {\n              s_no : j,\n              name : data[i].name,\n              tech_id : data[i].id\n            }\n            \n            techData.push(dataArr);\n          }\n        }else{\n          toast.success(nextProps.apiRes.data.message, {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n          });\n\n          this.listTechno(this.state.token);\n        }\n      }else{\n        toast.error(nextProps.apiRes.errorMessage, {\n          position: \"top-right\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        });\n      }\n    }\n  }\n\n  onChange = e => {\n    \n     this.setState({ filter: e.target.value });\n };\n\n  listTechno(token)\n  {\n    const authData = {\n      token: token\n    };\n\n    this.props.listTechnologies(authData);\n  }\n\n  deleteTechno = e => {\n    const technoData = {\n      tech_id: e,\n      token: this.state.token\n    };\n      \n    this.props.deleteTechnologies(technoData);\n  };\n\n  render() {\n    const fields = [\n      { key: 's_no' },\n      { key: 'name' },\n      { key: 'action' },\n    ]\n\n    const { filter } = this.state;\n    const lowercasedFilter = filter.toLowerCase();\n    const filteredData = techData.filter(item => {\n      //console.log('item from ', item)\n      return Object.keys(item).some(key =>\n        typeof item[key] === \"string\" && item[key].toLowerCase().includes(lowercasedFilter)\n      );\n    });\n    console.log('fil data be',filteredData); \n\n    return (\n      <>\n        <CRow>\n          <CCol xs=\"12\" lg=\"12\">\n            <CCard>\n              <CCardHeader>\n                List\n              </CCardHeader>\n              <CCardBody>\n\n              <CForm className=\"form-horizontal\">\n                  <CFormGroup row>\n                    <CCol xs=\"2\" md=\"3\">\n                      <CInput type=\"text\" placeholder=\"Search\" onChange={this.onChange}  name=\"search\" />\n                    </CCol>\n                  </CFormGroup>\n               </CForm>\n\n              <CDataTable\n                items={filteredData }\n                fields={fields}\n                striped\n                itemsPerPage={10}\n                pagination\n                scopedSlots = {{\n                  'action':\n                      (item, index)=>{\n                        return (\n                          <CCardBody>\n                            <CButton size=\"sm\" color=\"info\" className=\"ml-1\" to={\"/technologies/edit/\"+item.tech_id}>Edit</CButton>\n                            <CButton size=\"sm\" color=\"danger\" className=\"ml-1\" onClick={() => {if(window.confirm('Are you sure you want to delete this?')){this.deleteTechno(item.tech_id)};}}>Delete</CButton>\n                          </CCardBody>\n                      )\n                    }\n                }}\n              />\n              </CCardBody>\n            </CCard>\n          </CCol>\n        </CRow>\n\n        <ToastContainer />\n      </>\n    );\n  }\n}\n\nTechnologies.propTypes = {\n  listTechnologies: PropTypes.func.isRequired,\n  deleteTechnologies: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  apiRes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  apiRes: state.apiRes\n});\n\nexport default connect(\n  mapStateToProps,\n  { listTechnologies, deleteTechnologies }\n)(Technologies);","/home/android03/Projects/pms-dashboard/src/views/department/Index.js",[],"/home/android03/Projects/pms-dashboard/src/views/technologies/Edit.js",["648","649"],"import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport store from \"./../../store\";\nimport jwt_decode from \"jwt-decode\";\nimport { logoutUser } from \"./../../actions/authActions\";\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CForm,\n  CFormGroup,\n  CInput,\n  CLabel,\n  CRow\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\n\nimport { dataTechnologies, updateTechnologies } from \"./../../actions/technologiesActions\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nclass Edittechno extends Component {\n  constructor() {\n      super();\n      this.state = {\n          token: \"\",\n          tech_id: \"\",\n          name: \"\",\n          submitStatus: false\n      };\n  }\n\n  componentDidMount() {\n    if(localStorage.jwtToken)\n    { \n      const token = localStorage.jwtToken;\n      const decoded = jwt_decode(token);\n      //console.log('decoded data is ', token);\n\n      if (this.props.match.params){\n        this.setState({ tech_id: this.props.match.params.id, token: decoded.token });\n  \n        const techData = {\n          tech_id: this.props.match.params.id,\n          token: decoded.token\n        };\n  \n        this.props.dataTechnologies(techData);\n      }else{\n        this.props.history.push(\"/technologies\");\n      }\n    }else{\n      store.dispatch(logoutUser());\n      this.props.history.push(\"/login\");\n    }\n  };\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.apiRes) {\n      if(nextProps.apiRes.status === 200)\n      {\n        if(nextProps.apiRes.data.message == null)\n        {\n          console.log('techno data is ',nextProps.apiRes.data)\n          nextProps.apiRes.data.map((val,i)=>{\n            console.log('data is',val )\n            if(val.id == this.props.match.params.id){\n              this.setState({ name: val.name });\n            }\n          })\n        }else{\n          toast.success(nextProps.apiRes.data.message,{\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n          });\n        }\n      }else{\n        toast.error(nextProps.apiRes.errorMessage, {\n          position: \"top-right\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        });\n      }\n\n      this.setState({submitStatus:false});\n    }\n  }\n\n  onChange = e => {\n      this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onSubmit = e => {\n      e.preventDefault();\n      const techUpdateData = {\n        tech_id: this.state.tech_id,\n        name: this.state.name,\n        token: this.state.token\n      };\n\n      this.props.updateTechnologies(techUpdateData);\n  };\n\n  render() {\n    const { name, submitStatus } = this.state;\n    return (\n      <>\n        <CRow>\n          <CCol xs=\"12\" md=\"12\">\n            <CCard>\n              <CCardHeader>\n                Edit Technologies\n              </CCardHeader>\n              <CCardBody>\n                <CForm className=\"form-horizontal\">\n                  <CFormGroup row>\n                    <CCol md=\"3\">\n                      <CLabel htmlFor=\"text-input\">Name</CLabel>\n                    </CCol>\n                    <CCol xs=\"12\" md=\"9\">\n                      <CInput type=\"text\" placeholder=\"Name\" onChange={this.onChange} name=\"name\" value={name}/>\n                    </CCol>\n                  </CFormGroup>\n                </CForm>\n              </CCardBody>\n              <CCardFooter>\n                <CButton type=\"button\" size=\"sm\" color=\"primary\" disabled={submitStatus} onClick={this.onSubmit}><CIcon name=\"cil-scrubber\" /> Update</CButton>\n              </CCardFooter>\n            </CCard>\n          </CCol>\n        </CRow>\n\n        <ToastContainer />\n      </>\n    );\n  }\n}\n\nEdittechno.propTypes = {\n  dataTechnologies: PropTypes.func.isRequired,\n  updateTechnologies: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  apiRes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  apiRes: state.apiRes\n});\n\nexport default connect(\n  mapStateToProps,\n  { dataTechnologies, updateTechnologies }\n)(Edittechno);","/home/android03/Projects/pms-dashboard/src/views/technologies/Add.js",[],"/home/android03/Projects/pms-dashboard/src/views/department/Add.js",[],"/home/android03/Projects/pms-dashboard/src/views/department/Edit.js",[],"/home/android03/Projects/pms-dashboard/src/views/skill/Index.js",[],"/home/android03/Projects/pms-dashboard/src/views/skill/Add.js",[],"/home/android03/Projects/pms-dashboard/src/views/skill/Edit.js",[],"/home/android03/Projects/pms-dashboard/src/views/designation/Index.js",[],"/home/android03/Projects/pms-dashboard/src/views/designation/Add.js",[],"/home/android03/Projects/pms-dashboard/src/views/designation/Edit.js",[],"/home/android03/Projects/pms-dashboard/src/views/users/Index.js",["650","651","652"],"import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport store from \"../../store\";\nimport jwt_decode from \"jwt-decode\";\nimport { logoutUser } from \"../../actions/authActions\";\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CDataTable,\n  CRow,\n  CButton,\n  CForm,\n  CFormGroup,\n  CInput,\n  CLabel,\n} from '@coreui/react'\n\nimport { listUsers, deleteUsers } from \"../../actions/usersActions\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nvar usersData = [];\nvar skillData = [];\n\nclass Users extends Component {\n  constructor() {\n    super();\n    this.state = {\n      token: \"\",\n      projectItem: \"\",\n      filter: \"\",\n      \n     \n  };\n}\n  componentDidMount(){\n    if(localStorage.jwtToken)\n    { \n      const token = localStorage.jwtToken;\n      const decoded = jwt_decode(token);\n\n      this.setState({ token: decoded.token });\n\n      const userData = {\n        user_type: 2,\n        token: decoded.token\n      };\n\n      this.listUser(userData);\n    }else{\n      store.dispatch(logoutUser());\n      this.props.history.push(\"/login\");\n    }\n  };\n\n  componentWillReceiveProps(nextProps) {\n    skillData = [];\n    if (nextProps.apiRes) {\n      if(nextProps.apiRes.status === 200)\n      {\n        if(nextProps.apiRes.data.message == null)\n        {\n          usersData = [];\n         \n          var data = nextProps.apiRes.data;\n          //console.log(data)\n          for (var i = 0; i < data.length; i++) {\n            data[i].skills.map((item)=>{\n              //console.log('data skill',item)\n             \n                var skillArr = {\n                  proficiency: item.proficiency,\n                  skillname: item.technology.name\n                }\n                skillData.push(skillArr)   \n            })\n            var j = i+1;\n            var dataArr = {\n              s_no : j,\n              name : data[i].name,\n              user_id : data[i].id,\n              emp_id : data[i].employee_code,\n              email : data[i].email,\n              skill : data[i].skills,\n              user_type: data[i].user_type,  \n            }\n            \n            usersData.push(dataArr);\n          \n          }\n          \n        }else{\n          toast.success(nextProps.apiRes.data.message, {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n          });\n\n          const userData = {\n            user_type: 1,\n            token: this.state.token\n          };\n\n          this.listUser(userData);\n        }\n      }else{\n        toast.error(nextProps.apiRes.errorMessage, {\n          position: \"top-right\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        });\n      }\n    }\n  }\n\n  listUser(userData)\n  {\n    this.props.listUsers(userData);\n  }\n\n  onChange = e => {\n    console.log('normal data',usersData);\n     //this.setState({ [e.target.name]: e.target.value });\n     this.setState({ filter: e.target.value });\n };\n\n applyCond = (item) =>{\n   console.log('arpit',item)\n   if(item.skill.length > 0){ \n     return item.skill.map((val)=>{\n\n        return <p>{val.technology.name} - <span>{val.proficiency}</span></p>;\n      })\n    }\n     else{\n       return <p>No Data</p>\n     } \n   }\n\n  // deleteUser = e => {\n  //   const userData = {\n  //     user_id: e,\n  //     token: this.state.token\n  //   };\n      \n  //   this.props.deleteUsers(userData);\n  // };\n\n  \n  render() {\n    const fields = [\n      { key: 's_no' },\n      { key: 'emp_id' },\n      { key: 'name' },\n      { key: 'email' },\n      { key: 'skill' },\n      { key: 'user_type' },\n      { key: 'action' },  \n    ]\n\n    const { filter } = this.state;\n    const lowercasedFilter = filter.toLowerCase();\n    const filteredData = usersData.filter(item => {\n      console.log('item from ', item)\n      return Object.keys(item).some(key =>\n        typeof item[key] === \"string\" && item[key].toLowerCase().includes(lowercasedFilter)\n      );\n    });\n    console.log('fil data be',filteredData); \n\n    return (\n      <>\n        <CRow>\n          <CCol xs=\"12\" lg=\"12\">\n            <CCard>\n              <CCardHeader>\n               Users List\n              </CCardHeader>\n              <CCardBody>\n                <CForm className=\"form-horizontal\">\n                  <CFormGroup row>\n                    <CCol xs=\"2\" md=\"3\">\n                      <CInput type=\"text\" placeholder=\"Search\" onChange={this.onChange}  name=\"search\" />\n                    </CCol>\n                  </CFormGroup>\n               </CForm>\n               \n\n              <CDataTable\n                items={filteredData}\n                fields={fields}\n                striped\n                itemsPerPage={10}\n                pagination\n                 scopedSlots = {{\n                  'action':\n                      (item, index)=>{\n                        return (\n                          <CCardBody>\n                            <CButton size=\"sm\" color=\"info\" className=\"ml-1\" to={\"/users/detail/\"+item.user_id}>Show Details</CButton>          \n                          </CCardBody>\n                       )\n                     },\n                     'skill':\n                      (item, index)=>{\n                       //console.log('item is',item.skill);\n                      return (\n                              <div>\n                                 {this.applyCond(item)} \n                              </div>\n                        ) \n                     } \n\n                }}\n              />\n              </CCardBody>\n            </CCard>\n          </CCol>\n        </CRow>\n\n        <ToastContainer />\n      </>\n    );\n  }\n}\n\nUsers.propTypes = {\n  listUsers: PropTypes.func.isRequired,\n  deleteUsers: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  apiRes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  apiRes: state.apiRes\n});\n\nexport default connect(\n  mapStateToProps,\n  { listUsers, deleteUsers }\n)(Users);","/home/android03/Projects/pms-dashboard/src/actions/changepassActions.js",[],"/home/android03/Projects/pms-dashboard/src/actions/emailtempActions.js",[],"/home/android03/Projects/pms-dashboard/src/actions/technologiesActions.js",[],"/home/android03/Projects/pms-dashboard/src/actions/departmentActions.js",[],"/home/android03/Projects/pms-dashboard/src/actions/designationActions.js",[],"/home/android03/Projects/pms-dashboard/src/actions/skillActions.js",[],"/home/android03/Projects/pms-dashboard/src/actions/usersActions.js",["653"],"import axios from \"axios\";\nimport { GET_ERRORS, GET_SUCCESS } from \"./types\";\nimport PropTypes from \"prop-types\";\nimport constants from \"./../constants\";\n\nexport const listUsers = (userData) => (dispatch) => {\n  var instance = axios.create();\n  instance.defaults.headers.common = {};\n\n  instance\n    // .post(\"/api/v1/users\", userData)\n    .get(\"/api/v1/users\", {\n      headers: {\n        authorization: \"Bearer \" + userData.token,\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n    .then((res) =>\n      dispatch({\n        type: GET_SUCCESS,\n        payload: res,\n      })\n    )\n    .catch((err) =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err,\n      })\n    );\n};\n\nexport const dataUsers = (userData) => (dispatch) => {\n \n  let config = {\n    method: \"GET\",\n    url: constants.baseUrl + \"/api/v1/users\",\n    data: userData,\n    headers: {\n      Authorization: \"Bearer \" + userData.token,\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  console.log(\"CONFIG\", config);\n  axios(config).then(\n    (success) => {\n      console.log(\"SUCCESS\");\n      dispatch({\n        type: GET_SUCCESS,\n        payload: success,\n      });\n    },\n    (error) => {\n      console.log(\"ERROR\");\n      dispatch({\n        type: GET_ERRORS,\n        payload: error,\n      });\n    }\n  );\n};\n\nexport const addUsers = (userData) => (dispatch) => {\n  console.log(\"userData requesting with \", userData);\n \n  let config = {\n    method: \"POST\",\n    url: constants.baseUrl + \"/api/v1/users\",\n    data: userData,\n    headers: {\n      Authorization: \"Bearer \" + userData.token,\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  console.log(\"CONFIG\", config);\n  axios(config).then(\n    (success) => {\n      console.log(\"SUCCESS\");\n      dispatch({\n        type: GET_SUCCESS,\n        payload: success,\n      });\n    },\n    (error) => {\n      console.log(\"ERROR\");\n      dispatch({\n        type: GET_ERRORS,\n        payload: error,\n      });\n    }\n  );\n};\n\nexport const updateUsers = (userData) => (dispatch) => {\n  // var instance = axios.create();\n  // instance.defaults.headers.common = {};\n\n  // instance\n  //     .put(\"/api/v1/users\", userData)\n  //     .then(res =>\n  //         dispatch({\n  //             type: GET_SUCCESS,\n  //             payload: res,\n  //         })\n  //     ).catch(err =>\n  //     dispatch({\n  //         type: GET_ERRORS,\n  //         payload: err.response.data\n  //     })\n  // );\n\n  let config = {\n    method: \"PUT\",\n    url: constants.baseUrl + \"/api/v1/users\",\n    data: userData,\n    headers: {\n      Authorization: \"Bearer \" + userData.token,\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  console.log(\"CONFIG\", config);\n  axios(config).then(\n    (success) => {\n      console.log(\"SUCCESS\");\n      dispatch({\n        type: GET_SUCCESS,\n        payload: success,\n      });\n    },\n    (error) => {\n      console.log(\"ERROR\");\n      dispatch({\n        type: GET_ERRORS,\n        payload: error.response.data,\n      });\n    }\n  );\n};\n\nexport const deleteUsers = (userData) => (dispatch) => {\n  console.log(\"delete clicked\");\n  var instance = axios.create();\n  instance.defaults.headers.common = {};\n\n  instance\n    .post(\"/api/v1/users/:id\", userData)\n    .then((res) =>\n      dispatch({\n        type: GET_SUCCESS,\n        payload: res,\n      })\n    )\n    .catch((err) =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data,\n      })\n    );\n};\n\nexport const assignProject = (userData) => (dispatch) => {\n  console.log(\"userData requesting with \", userData);\n\n  let config = {\n    method: \"POST\",\n    url: constants.baseUrl + \"/api/v1/users/projects\",\n    data: userData,\n    headers: {\n      Authorization: \"Bearer \" + userData.token,\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  console.log(\"CONFIG\", config);\n  axios(config).then(\n    (success) => {\n      console.log(\"SUCCESS\");\n      dispatch({\n        type: GET_SUCCESS,\n        payload: success,\n      });\n    },\n    (error) => {\n      console.log(\"ERROR\");\n      dispatch({\n        type: GET_ERRORS,\n        payload: error.response.data,\n      });\n    }\n  );\n};\n\nexport const addSkill = (userData) => (dispatch) => {\n  console.log(\"userData requesting with \", userData);\n\n  let config = {\n    method: \"POST\",\n    url: constants.baseUrl + \"/api/v1/users/skills\",\n    data: userData,\n    headers: {\n      Authorization: \"Bearer \" + userData.token,\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  console.log(\"CONFIG\", config);\n  axios(config).then(\n    (success) => {\n      console.log(\"SUCCESS\");\n      dispatch({\n        type: GET_SUCCESS,\n        payload: success,\n      });\n    },\n    (error) => {\n      console.log(\"ERROR\");\n      dispatch({\n        type: GET_ERRORS,\n        payload: error,\n      });\n    }\n  );\n};\n","/home/android03/Projects/pms-dashboard/src/views/charts/ChartBarSimple.js",[],"/home/android03/Projects/pms-dashboard/src/views/charts/ChartLineSimple.js",[],"/home/android03/Projects/pms-dashboard/src/views/users/Add.js",[],"/home/android03/Projects/pms-dashboard/src/views/users/Edit.js",["654","655","656"],"import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport store from \"./../../store\";\nimport ChipInput from 'material-ui-chip-input';\nimport jwt_decode from \"jwt-decode\";\nimport { logoutUser } from \"./../../actions/authActions\";\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CForm,\n  CFormGroup,\n  CInput,\n  CLabel,\n  CRow,\n  CSelect\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\n\nimport { dataUsers, updateUsers } from \"./../../actions/usersActions\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nclass Editdesig extends Component {\n  constructor() {\n      super();\n      this.state = {\n          token: \"\",\n          user_id: \"\",\n          employee_code:\"\",\n          name: \"\",\n          email: \"\",\n          password: \"\",\n          phone:\"\",\n          dob:\"\",\n          doj:\"\",\n          user_type:\"\",\n          submitStatus: false\n      };\n  }\n\n  componentDidMount() {\n    if(localStorage.jwtToken)\n    { \n      const token = localStorage.jwtToken;\n      const decoded = jwt_decode(token);\n\n      if (this.props.match.params){\n        this.setState({ user_id: this.props.match.params.id, token: decoded.token });\n  \n        const userData = {\n          user_id: this.props.match.params.id,\n          token: decoded.token\n        };\n  \n       this.props.dataUsers(userData);\n      }else{\n        this.props.history.push(\"/users\");\n      }\n    }else{\n      store.dispatch(logoutUser());\n      this.props.history.push(\"/login\");\n    }\n  };\n\n  componentWillReceiveProps(nextProps) {\n    //console.log(nextProps)\n    if (nextProps.apiRes) {\n      if(nextProps.apiRes.status === 200)\n      {\n        if(nextProps.apiRes.data.message == null)\n        {\n          //console.log(this.props.match.params.id);\n          for (let index = 0; index < nextProps.apiRes.data.length; index++) {\n            if(nextProps.apiRes.data[index].id == this.props.match.params.id){ \n              console.log(nextProps.apiRes.data[index])\n              this.setState({ name: nextProps.apiRes.data[index].name });\n              this.setState({ email: nextProps.apiRes.data[index].email });\n              this.setState({ employee_code: nextProps.apiRes.data[index].employee_code });\n              this.setState({ password: nextProps.apiRes.data[index].password });\n              this.setState({ phone: nextProps.apiRes.data[index].phone });\n              this.setState({ user_type: nextProps.apiRes.data[index].user_type });\n              this.setState({ dob: nextProps.apiRes.data[index].dob });\n              this.setState({ doj: nextProps.apiRes.data[index].doj });            \n            }\n          }\n          \n        }else{\n          toast.success(nextProps.apiRes.data.message, {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n          });\n        }\n      }else{\n        toast.error(nextProps.apiRes.errorMessage, {\n          position: \"top-right\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        });\n      }\n\n      this.setState({submitStatus:false});\n    }\n  }\n\n  onChange = e => {\n      this.setState({ [e.target.name]: e.target.value });\n      \n  };\n\n  onSubmit = e => {\n      e.preventDefault();\n      const userUpdateData = {\n        user_id: this.state.user_id,\n        name: this.state.name,\n        email: this.state.email,\n        password: this.state.password,\n        phone: this.state.phone,\n        employee_code: this.state.employee_code,\n        dob: this.state.dob,\n        doj: this.state.doj,\n        user_type: this.state.user_type,\n        token: this.state.token\n      };\n\n      this.props.updateUsers(userUpdateData);\n  };\n\n  render() {\n    const { name, email, password, phone, employee_code, dob, doj, user_type, projects, submitStatus } = this.state;\n    return (\n      <>\n        <CRow>\n          <CCol xs=\"12\" md=\"12\">\n            <CCard>\n              <CCardHeader>\n                Edit User\n              </CCardHeader>\n              <CCardBody>\n                {/* <CForm className=\"form-horizontal\">\n                  <CFormGroup row>\n                    <CCol md=\"3\">\n                      <CLabel htmlFor=\"text-input\">Name</CLabel>\n                    </CCol>\n                    <CCol xs=\"12\" md=\"9\">\n                      <CInput type=\"text\" placeholder=\"Name\" onChange={this.onChange} name=\"name\" value={name}/>\n                    </CCol>\n                  </CFormGroup>\n                </CForm> */}\n                <CForm className=\"form-horizontal\">\n                    \n                    <CFormGroup row>\n                       <CCol md=\"3\">\n                         <CLabel htmlFor=\"text-input\">Employee Code</CLabel>\n                       </CCol>\n                       <CCol xs=\"12\" md=\"9\">\n                         <CInput type=\"text\" placeholder=\"Employee Code\" onChange={this.onChange} name=\"employee_code\" value={employee_code}/>\n                       </CCol>\n                     </CFormGroup>\n   \n                     <CFormGroup row>\n                       <CCol md=\"3\">\n                         <CLabel htmlFor=\"text-input\">Name</CLabel>\n                       </CCol>\n                       <CCol xs=\"12\" md=\"9\">\n                         <CInput type=\"text\" placeholder=\"Name\" onChange={this.onChange} name=\"name\" value={name}/>\n                       </CCol>\n                     </CFormGroup>\n   \n                     <CFormGroup row>\n                       <CCol md=\"3\">\n                         <CLabel htmlFor=\"text-input\">Email</CLabel>\n                       </CCol>\n                       <CCol xs=\"12\" md=\"9\">\n                         <CInput type=\"email\" placeholder=\"Email\" onChange={this.onChange} name=\"email\" value={email}/>\n                       </CCol>\n                     </CFormGroup>\n   \n                     <CFormGroup row>\n                       <CCol md=\"3\">\n                         <CLabel htmlFor=\"text-input\">Password</CLabel>\n                       </CCol>\n                       <CCol xs=\"12\" md=\"9\">\n                         <CInput type=\"password\" placeholder=\"Password\" onChange={this.onChange} name=\"password\" value={password}/>\n                       </CCol>\n                     </CFormGroup>\n   \n                     <CFormGroup row>\n                       <CCol md=\"3\">\n                         <CLabel htmlFor=\"text-input\">Phone Number</CLabel>\n                       </CCol>\n                       <CCol xs=\"12\" md=\"9\">\n                         <CInput type=\"text\" placeholder=\"Phone Number\" onChange={this.onChange} name=\"phone\" value={phone}/>\n                       </CCol>\n                     </CFormGroup>\n   \n                     <CFormGroup row>\n                       <CCol md=\"3\">\n                         <CLabel htmlFor=\"text-input\">User Type</CLabel>\n                       </CCol>\n                       <CCol xs=\"12\" md=\"9\">\n                         {/* <CSelect type=\"email\" placeholder=\"Email\" onChange={this.onChange} name=\"email\" value={email}/> */}\n                         <CSelect onChange={this.onChange} name=\"user_type\" >\n                           <option disabled selected hidden>{user_type}</option>\n                           <option value=\"admin\">Admin</option>\n                           <option value=\"sales\">Sales</option>\n                           <option value=\"manager\">Manager</option>\n                           <option value=\"user\">User</option>\n                         </CSelect>\n                       </CCol>\n                     </CFormGroup>\n   \n                     <CFormGroup row>\n                       <CCol md=\"3\">\n                         <CLabel htmlFor=\"text-input\">Date of birth</CLabel>\n                       </CCol>\n                       <CCol xs=\"12\" md=\"9\">\n                         <CInput type=\"text\" placeholder=\"Date of birth\" onChange={this.onChange} name=\"dob\" value={dob}/>\n                       </CCol>\n                     </CFormGroup>\n   \n                     <CFormGroup row>\n                       <CCol md=\"3\">\n                         <CLabel htmlFor=\"text-input\">Date of joining</CLabel>\n                       </CCol>\n                       <CCol xs=\"12\" md=\"9\">\n                         <CInput type=\"text\" placeholder=\"Date of joining\" onChange={this.onChange} name=\"doj\" value={doj}/>\n                       </CCol>\n                     </CFormGroup>\n   \n                   </CForm>\n              </CCardBody>\n              <CCardFooter>\n                <CButton type=\"button\" size=\"sm\" color=\"primary\" disabled={submitStatus} onClick={this.onSubmit}><CIcon name=\"cil-scrubber\" /> Update</CButton>\n              </CCardFooter>\n            </CCard>\n          </CCol>\n        </CRow>\n\n        <ToastContainer />\n      </>\n    );\n  }\n}\n\nEditdesig.propTypes = {\n  dataUsers: PropTypes.func.isRequired,\n  updateUsers: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  apiRes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  apiRes: state.apiRes\n});\n\nexport default connect(\n  mapStateToProps,\n  { dataUsers, updateUsers }\n)(Editdesig);","/home/android03/Projects/pms-dashboard/src/views/client/Edit.js",["657","658"],"import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport store from \"./../../store\";\nimport jwt_decode from \"jwt-decode\";\nimport { logoutUser } from \"./../../actions/authActions\";\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CForm,\n  CFormGroup,\n  CInput,\n  CLabel,\n  CRow,\n  CSelect\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\n\nimport { dataClients, updateClients } from \"./../../actions/clientActions\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nclass Editclient extends Component {\n  constructor() {\n      super();\n      this.state = {\n          token: \"\",\n          client_id: \"\",\n          client_code:\"\",\n          name: \"\",\n          country: \"\",\n          address: \"\",\n          submitStatus: false\n      };\n  }\n\n  componentDidMount() {\n    if(localStorage.jwtToken)\n    { \n      const token = localStorage.jwtToken;\n      const decoded = jwt_decode(token);\n\n      if (this.props.match.params){\n        this.setState({ client_id: this.props.match.params.id, token: decoded.token });\n  \n        const clientData = {\n          client_id: this.props.match.params.id,\n          token: decoded.token\n        };\n  \n       this.props.dataClients(clientData);\n      }else{\n        this.props.history.push(\"/clients\");\n      }\n    }else{\n      store.dispatch(logoutUser());\n      this.props.history.push(\"/login\");\n    }\n  };\n\n  componentWillReceiveProps(nextProps) {\n    //console.log(nextProps)\n    if (nextProps.apiRes) {\n      if(nextProps.apiRes.status === 200)\n      {\n        if(nextProps.apiRes.data.message == null)\n        {\n          //console.log(this.props.match.params.id);\n          for (let index = 0; index < nextProps.apiRes.data.length; index++) {\n            console.log('api data is',nextProps.apiRes.data[index])\n            if(nextProps.apiRes.data[index].client_code == this.props.match.params.id){ \n              //console.log(nextProps.apiRes.data[index])\n              this.setState({ name: nextProps.apiRes.data[index].name });\n              this.setState({ client_code: nextProps.apiRes.data[index].client_code });\n              this.setState({ address: nextProps.apiRes.data[index].address });\n              this.setState({ country: nextProps.apiRes.data[index].country });          \n            }\n          }\n          \n        }else{\n          toast.success(nextProps.apiRes.data.message, {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n          });\n        }\n      }else{\n        toast.error(nextProps.apiRes.errorMessage, {\n          position: \"top-right\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        });\n      }\n\n      this.setState({submitStatus:false});\n    }\n  }\n\n  onChange = e => {\n      this.setState({ [e.target.name]: e.target.value });\n      this.setState({ [e.target.client_code]: e.target.value });\n      this.setState({ [e.target.address]: e.target.value });\n      this.setState({ [e.target.country]: e.target.value });\n  };\n\n  onSubmit = e => {\n      e.preventDefault();\n      const clientUpdateData = {\n        client_id: this.state.user_id,\n        name: this.state.name,\n        client_code: this.state.client_code,\n        country: this.state.country,\n        address: this.state.address,\n        token: this.state.token\n      };\n\n      this.props.updateClients(clientUpdateData);\n  };\n\n  render() {\n    const { name, client_code, address, country, submitStatus } = this.state;\n    return (\n      <>\n        <CRow>\n          <CCol xs=\"12\" md=\"12\">\n            <CCard>\n              <CCardHeader>\n                Edit Client\n              </CCardHeader>\n              <CCardBody>\n                {/* <CForm className=\"form-horizontal\">\n                  <CFormGroup row>\n                    <CCol md=\"3\">\n                      <CLabel htmlFor=\"text-input\">Name</CLabel>\n                    </CCol>\n                    <CCol xs=\"12\" md=\"9\">\n                      <CInput type=\"text\" placeholder=\"Name\" onChange={this.onChange} name=\"name\" value={name}/>\n                    </CCol>\n                  </CFormGroup>\n                </CForm> */}\n                <CForm className=\"form-horizontal\">\n                    \n                    <CFormGroup row>\n                       <CCol md=\"3\">\n                         <CLabel htmlFor=\"text-input\">Name</CLabel>\n                       </CCol>\n                       <CCol xs=\"12\" md=\"9\">\n                         <CInput type=\"text\" placeholder=\"Name\" onChange={this.onChange} name=\"name\" value={name}/>\n                       </CCol>\n                     </CFormGroup>\n   \n                     <CFormGroup row>\n                       <CCol md=\"3\">\n                         <CLabel htmlFor=\"text-input\">Address</CLabel>\n                       </CCol>\n                       <CCol xs=\"12\" md=\"9\">\n                         <CInput type=\"text\" placeholder=\"Address\" onChange={this.onChange} name=\"address\" value={address}/>\n                       </CCol>\n                     </CFormGroup>\n   \n                     <CFormGroup row>\n                       <CCol md=\"3\">\n                         <CLabel htmlFor=\"text-input\">Country</CLabel>\n                       </CCol>\n                       <CCol xs=\"12\" md=\"9\">\n                         <CInput type=\"text\" placeholder=\"country\" onChange={this.onChange} name=\"country\" value={country}/>\n                       </CCol>\n                     </CFormGroup>\n   \n                     <CFormGroup row>\n                       <CCol md=\"3\">\n                         <CLabel htmlFor=\"text-input\">Client Code</CLabel>\n                       </CCol>\n                       <CCol xs=\"12\" md=\"9\">\n                         <CInput type=\"text\" placeholder=\"Client Code\" onChange={this.onChange} name=\"client_code\" value={client_code}/>\n                       </CCol>\n                     </CFormGroup>\n   \n                   </CForm>\n              </CCardBody>\n              <CCardFooter>\n                <CButton type=\"button\" size=\"sm\" color=\"primary\" disabled={submitStatus} onClick={this.onSubmit}><CIcon name=\"cil-scrubber\" /> Update</CButton>\n              </CCardFooter>\n            </CCard>\n          </CCol>\n        </CRow>\n\n        <ToastContainer />\n      </>\n    );\n  }\n}\n\nEditclient.propTypes = {\n  dataClients: PropTypes.func.isRequired,\n  updateClients: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  apiRes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  apiRes: state.apiRes\n});\n\nexport default connect(\n  mapStateToProps,\n  { dataClients, updateClients }\n)(Editclient);","/home/android03/Projects/pms-dashboard/src/views/client/Index.js",["659"],"import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport store from \"../../store\";\nimport jwt_decode from \"jwt-decode\";\nimport { logoutUser } from \"../../actions/authActions\";\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CDataTable,\n  CRow,\n  CButton,\n  CForm,\n  CFormGroup,\n  CInput,\n  CLabel,\n} from '@coreui/react'\n\nimport { listClients, deleteClients ,dataClients } from \"../../actions/clientActions\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nvar clientData = [];\n\nclass Clients extends Component {\n  constructor() {\n    super();\n    this.state = {\n      token: \"\",\n      filter: \"\",\n    };\n  }\n\n  componentDidMount() {\n    if(localStorage.jwtToken)\n    { \n      const token = localStorage.jwtToken;\n      const decoded = jwt_decode(token);\n\n      this.setState({ token: decoded.token });\n\n      const clientData = {\n        user_type: 2,\n        token: decoded.token\n      };\n\n      this.listclient(clientData);\n    }else{\n      store.dispatch(logoutUser());\n      this.props.history.push(\"/login\");\n    }\n  };\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.apiRes) {\n      if(nextProps.apiRes.status === 200)\n      {\n        if(nextProps.apiRes.data.message == null)\n        {\n          clientData = [];\n          var data = nextProps.apiRes.data;\n          console.log(data)\n          for (var i = 0; i < data.length; i++) {\n            var j = i+1;\n            var dataArr = {\n              s_no : j,\n              name : data[i].name,\n              address : data[i].address,\n              country : data[i].country,\n              client_code : data[i].client_code,\n              //client_id : data[i].id,\n            }\n            \n            clientData.push(dataArr);\n          }\n        }else{\n          toast.success(nextProps.apiRes.data.message, {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n          });\n\n          const clientData = {\n            user_type: 1,\n            token: this.state.token\n          };\n\n          this.listclient(clientData);\n        }\n      }else{\n        toast.error(nextProps.apiRes.errorMessage, {\n          position: \"top-right\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        });\n      }\n    }\n  }\n\n  onChange = e => {\n    console.log('normal data',clientData);\n     //this.setState({ [e.target.name]: e.target.value });\n     this.setState({ filter: e.target.value });\n };\n\n  listclient(clientData)\n  {\n    this.props.listClients(clientData);\n  }\n\n  deleteClient = e => {\n    const clientData = {\n      client_code: e,\n      token: this.state.token\n    };\n    \n\n    this.props.deleteClients(clientData);\n  };\n\n  render() {\n    const fields = [\n      { key: 's_no' },\n      { key: 'name' },\n      // { key: 'client_id'},\n      { key: 'address' },\n      { key: 'country' },\n      { key: 'client_code' },\n      { key: 'action' },\n    ]\n\n    const { filter } = this.state;\n    const lowercasedFilter = filter.toLowerCase();\n    const filteredData = clientData.filter(item => {\n      console.log('item from ', item)\n      return Object.keys(item).some(key =>\n        typeof item[key] === \"string\" && item[key].toLowerCase().includes(lowercasedFilter)\n      );\n    });\n    console.log('fil data be',filteredData); \n\n\n    return (\n      <>\n        <CRow>\n          <CCol xs=\"12\" lg=\"12\">\n            <CCard>\n              <CCardHeader>\n                 Client List\n              </CCardHeader>\n              <CCardBody>\n\n              <CForm className=\"form-horizontal\">\n                  <CFormGroup row>\n                    <CCol xs=\"2\" md=\"3\">\n                      <CInput type=\"text\" placeholder=\"Search\" onChange={this.onChange}  name=\"search\" />\n                    </CCol>\n                  </CFormGroup>\n               </CForm>\n\n              <CDataTable\n                items={filteredData} \n                fields={fields}\n                striped\n                itemsPerPage={10}\n                pagination\n                scopedSlots = {{\n                  'action':\n                      (item, index)=>{\n                        //console.log('item gfrom client',item)\n                        return (\n                          <CCardBody>\n                            <CButton size=\"sm\" color=\"info\" className=\"ml-1\" to={\"/clients/edit/\"+item.client_code}>Edit</CButton>\n                            <CButton size=\"sm\" color=\"danger\" className=\"ml-1\" onClick={() => {if(window.confirm('Are you sure you want to delete this?')){this.deleteClient(item.client_code)};}}>Delete</CButton>\n                          </CCardBody>\n                      )\n                    }\n                }}\n              />\n              </CCardBody>\n            </CCard>\n          </CCol>\n        </CRow>\n\n        <ToastContainer />\n      </>\n    );\n  }\n}\n\nClients.propTypes = {\n  listClients: PropTypes.func.isRequired,\n  deleteClients: PropTypes.func.isRequired,\n  dataClients: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  apiRes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  apiRes: state.apiRes\n});\n\nexport default connect(\n  mapStateToProps,\n  { listClients, deleteClients, dataClients}\n)(Clients);","/home/android03/Projects/pms-dashboard/src/views/client/Add.js",["660"],"import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport store from \"./../../store\";\nimport jwt_decode from \"jwt-decode\";\nimport { logoutUser } from \"./../../actions/authActions\";\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CForm,\n  CFormGroup,\n  CInput,\n  CLabel,\n  CRow,\n  CSelect,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react';\n\nimport { addClients } from \"../../actions/clientActions\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nclass Addclient extends Component {\n  constructor() {\n    super();\n    this.state = {\n      token: \"\",\n      name: \"\",\n      address: \"\",\n      country: \"\",\n      client_code:\"\",\n      submitStatus: false\n    };\n  }\n\n  componentDidMount() {\n    if(localStorage.jwtToken)\n    { \n      const token = localStorage.jwtToken;\n      const decoded = jwt_decode(token);\n\n      this.setState({ token: decoded.token });\n    }else{\n      store.dispatch(logoutUser());\n      this.props.history.push(\"/login\");\n    }\n  };\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.apiRes) {\n      if(nextProps.apiRes.status === 200)\n      {\n        toast.success(nextProps.apiRes.data.message, {\n          position: \"top-right\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        });\n\n        this.setState({ name: \"\" });\n        this.setState({ address: \"\" });\n        this.setState({ country: \"\" });\n        this.setState({ client_code:\"\" });\n      }else{\n        toast.error(nextProps.apiRes.errorMessage, {\n          position: \"top-right\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        });\n      }\n\n      this.setState({submitStatus:false});\n    }\n    this.props.history.push(\"/clients\");\n  }\n\n  onChange = e => {\n      this.setState({ [e.target.name]: e.target.value });\n      this.setState({ [e.target.address]: e.target.value });\n      this.setState({ [e.target.country]: e.target.value });\n      this.setState({ [e.target.client_code]:e.target.value});\n  };\n\n  onSubmit = e => {\n    this.setState({submitStatus:true});\n\n    e.preventDefault();\n    const clientData = {\n      name: this.state.name,\n      address: this.state.address,\n      country: this.state.country,\n      client_code: this.state.client_code,\n      token: this.state.token\n    };  \n    this.props.addClients(clientData);\n   \n  };\n\n  render() {\n    const { name, address, country, client_code, submitStatus } = this.state;\n    return (\n      <>\n        <CRow>\n          <CCol xs=\"12\" md=\"12\">\n            <CCard>\n              <CCardHeader>\n                Add Client\n              </CCardHeader>\n              <CCardBody>\n                <CForm className=\"form-horizontal\">\n\n                  <CFormGroup row>\n                    <CCol md=\"3\">\n                      <CLabel htmlFor=\"text-input\">Name</CLabel>\n                    </CCol>\n                    <CCol xs=\"12\" md=\"9\">\n                      <CInput type=\"text\" placeholder=\"Name\" onChange={this.onChange} name=\"name\" value={name} required/>\n                    </CCol>\n                  </CFormGroup>\n\n                  <CFormGroup row>\n                    <CCol md=\"3\">\n                      <CLabel htmlFor=\"text-input\">Address</CLabel>\n                    </CCol>\n                    <CCol xs=\"12\" md=\"9\">\n                      <CInput type=\"email\" placeholder=\"Address\" onChange={this.onChange} name=\"address\" value={address}/>\n                    </CCol>\n                  </CFormGroup>\n\n                  <CFormGroup row>\n                    <CCol md=\"3\">\n                      <CLabel htmlFor=\"text-input\">Country</CLabel>\n                    </CCol>\n                    <CCol xs=\"12\" md=\"9\">\n                      <CInput type=\"text\" placeholder=\"Country\" onChange={this.onChange} name=\"country\" value={country}/>\n                    </CCol>\n                  </CFormGroup>\n\n                  <CFormGroup row>\n                    <CCol md=\"3\">\n                      <CLabel htmlFor=\"text-input\">Client Code</CLabel>\n                    </CCol>\n                    <CCol xs=\"12\" md=\"9\">\n                      <CInput type=\"text\" placeholder=\"Client Code\" onChange={this.onChange} name=\"client_code\" value={client_code}/>\n                    </CCol>\n                  </CFormGroup>\n\n                </CForm>\n              </CCardBody>\n              <CCardFooter>\n                <CButton type=\"button\" size=\"sm\" color=\"primary\" disabled={submitStatus} onClick={this.onSubmit}><CIcon name=\"cil-scrubber\" /> Submit </CButton>\n              </CCardFooter>\n            </CCard>\n          </CCol>\n        </CRow>\n\n        <ToastContainer />\n      </>\n    );\n  }\n}\n\nAddclient.propTypes = {\n  addClients: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  apiRes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  apiRes: state.apiRes\n});\n\nexport default connect(\n  mapStateToProps,\n  { addClients }\n)(Addclient);","/home/android03/Projects/pms-dashboard/src/actions/clientActions.js",["661","662"],"import axios from \"axios\";\nimport { GET_ERRORS, GET_SUCCESS } from \"./types\";\nimport PropTypes from \"prop-types\";\nimport constants from \"./../constants\";\n\nexport const listClients = (clientData) => (dispatch) => {\n  var instance = axios.create();\n  instance.defaults.headers.common = {};\n\n  instance\n    // .post(\"/api/v1/users\", userData)\n    .get(\"/api/v1/clients\", {\n      headers: {\n        authorization: \"Bearer \" + clientData.token,\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n    .then((res) =>\n      dispatch({\n        type: GET_SUCCESS,\n        payload: res,\n      })\n    )\n    .catch((err) =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data,\n      })\n    );\n};\n\nexport const dataClients = (clientData) => (dispatch) => {\n  // var instance = axios.create();\n  // instance.defaults.headers.common = {};\n\n  // instance\n  //     .post(\"/api/v1/users\", userData)\n  //     .then(res =>\n  //         dispatch({\n  //             type: GET_SUCCESS,\n  //             payload: res,\n  //         })\n  //     ).catch(err =>\n  //     dispatch({\n  //         type: GET_ERRORS,\n  //         payload: err.response.data\n  //     })\n  // );\n  let config = {\n    method: \"GET\",\n    url: constants.baseUrl + \"/api/v1/clients\",\n    data: clientData,\n    headers: {\n      Authorization: \"Bearer \" + clientData.token,\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  console.log(\"CONFIG\", config);\n  axios(config).then(\n    (success) => {\n      console.log(\"SUCCESS\");\n      // for (let index = 0; index < success.data.length; index++) {\n      //     if(success.data[index].client_code == clientData.client_code){\n      //         //console.log(success.data[index].id)\n      //         var idClient = success.data[index].id;\n      //         console.log(idClient);\n      //     }\n\n      // }\n      dispatch({\n        type: GET_SUCCESS,\n        payload: success,\n      });\n    },\n    (error) => {\n      console.log(\"ERROR\");\n      dispatch({\n        type: GET_ERRORS,\n        payload: error,\n      });\n    }\n  );\n};\n\nexport const addClients = (clientData) => (dispatch) => {\n  console.log(\"clientData requesting with \", clientData);\n  // var instance = axios.create();\n  // instance.defaults.headers.common = {};\n\n  // instance\n  //     .post(\"/api/v1/users\",{\n  //         headers: {\n  //             'authorization': \"Bearer \"+userData.token,\n  //             'Accept' : 'application/json',\n  //             'Content-Type': 'application/json'\n  //         }\n  //     })\n  //     .then(res =>{\n  //         console.log(\"RESPONSE\")\n  //         dispatch({\n  //             type: GET_SUCCESS,\n  //             payload: res,\n  //         })}\n  //     ).catch(err =>\n  //     dispatch({\n  //         type: GET_ERRORS,\n  //         payload: err.response.data\n  //     })\n  // );\n  let config = {\n    method: \"POST\",\n    url: constants.baseUrl + \"/api/v1/clients\",\n    data: clientData,\n    headers: {\n      Authorization: \"Bearer \" + clientData.token,\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  console.log(\"CONFIG\", config);\n  axios(config).then(\n    (success) => {\n      console.log(\"SUCCESS\");\n      dispatch({\n        type: GET_SUCCESS,\n        payload: success,\n      });\n    },\n    (error) => {\n      console.log(\"ERROR\");\n      dispatch({\n        type: GET_ERRORS,\n        payload: error,\n      });\n    }\n  );\n};\n\nexport const updateClients = (clientData) => (dispatch) => {\n  // console.log(userData);\n  // var instance = axios.create();\n  // instance.defaults.headers.common = {};\n\n  // instance\n  //     .post(\"/api/v1/users/update\", userData)\n  //     .then(res =>\n  //         dispatch({\n  //             type: GET_SUCCESS,\n  //             payload: res,\n  //         })\n  //     ).catch(err =>\n  //     dispatch({\n  //         type: GET_ERRORS,\n  //         payload: err.response.data\n  //     })\n  // );\n  let config = {\n    method: \"PUT\",\n    url: constants.baseUrl + \"/api/v1/clients\",\n    data: clientData,\n    headers: {\n      Authorization: \"Bearer \" + clientData.token,\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  console.log(\"CONFIG\", config);\n  axios(config).then(\n    (success) => {\n      console.log(\"SUCCESS\");\n      dispatch({\n        type: GET_SUCCESS,\n        payload: success,\n      });\n    },\n    (error) => {\n      console.log(\"ERROR\");\n      dispatch({\n        type: GET_ERRORS,\n        payload: error.response.data,\n      });\n    }\n  );\n};\n\nexport const deleteClients = (clientData) => (dispatch) => {\n  //console.log('delete clicked', clientData)\n  // var instance = axios.create();\n  // instance.defaults.headers.common = {};\n\n  // instance\n  //     .post(\"/api/v1/clients/:id\", clientData)\n  //     .then(res =>\n  //         dispatch({\n  //             type: GET_SUCCESS,\n  //             payload: res,\n  //         })\n  //     ).catch(err =>\n  //     dispatch({\n  //         type: GET_ERRORS,\n  //         payload: err.response.data\n  //     })\n  // );\n  let configg = {\n    method: \"GET\",\n    url: constants.baseUrl + \"/api/v1/clients\",\n    data: clientData,\n    headers: {\n      Authorization: \"Bearer \" + clientData.token,\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  console.log(\"CONFIG\", configg);\n  axios(configg).then(\n    (success) => {\n      console.log(\"SUCCESS\");\n      for (let index = 0; index < success.data.length; index++) {\n        if (success.data[index].client_code == clientData.client_code) {\n          //console.log(success.data[index].id)\n          var idClient = success.data[index].id;\n          console.log(idClient);\n\n          let config = {\n            method: \"DELETE\",\n            url: `${constants.baseUrl}/api/v1/clients/${idClient}`,\n            data: clientData,\n            headers: {\n              Authorization: \"Bearer \" + clientData.token,\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\",\n            },\n          };\n          console.log(\"CONFIG\", config);\n          axios(config).then(\n            (success) => {\n              console.log(\"SUCCESS\");\n              dispatch({\n                type: GET_SUCCESS,\n                payload: success,\n              });\n            },\n            (error) => {\n              console.log(\"ERROR\");\n              dispatch({\n                type: GET_ERRORS,\n                payload: error.response.data,\n              });\n            }\n          );\n        }\n      }\n    },\n    (error) => {\n      console.log(\"ERROR\");\n    }\n  );\n};\n","/home/android03/Projects/pms-dashboard/src/views/project/Index.js",["663","664"],"import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport store from \"../../store\";\nimport jwt_decode from \"jwt-decode\";\nimport { logoutUser } from \"../../actions/authActions\";\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CDataTable,\n  CRow,\n  CButton,\n  CForm,\n  CFormGroup,\n  CInput,\n  CLabel,\n} from '@coreui/react'\n\nimport { listProjects, deleteProjects } from \"../../actions/projectActions\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nvar proData = [];\n\nclass Projects extends Component {\n  constructor() {\n    super();\n    this.state = {\n      token: \"\",\n      namedata:[],\n      manager:[],\n      proj:[],\n      filter:\"\"\n    };\n  }\n\n  componentDidMount() {\n    if(localStorage.jwtToken)\n    { \n      const token = localStorage.jwtToken;\n      const decoded = jwt_decode(token);\n\n      this.setState({ token: decoded.token });\n\n      const proData = {\n        user_type: 2,\n        token: decoded.token\n      };\n      \n      // this.props.listClients(clientData)\n      // this.props.listUsers(userData)\n      this.listPro(proData);\n    }else{\n      store.dispatch(logoutUser());\n      this.props.history.push(\"/login\");\n    }\n  };\n\n  componentWillReceiveProps(nextProps) {\n    //console.log('urls are', nextProps.apiRes.config.url)\n    if (nextProps.apiRes) {\n      if(nextProps.apiRes.status === 200)\n      {\n        if(nextProps.apiRes.data.message == null)\n        {\n          proData = [];\n          \n          var data = nextProps.apiRes.data;\n          //console.log('data is',data)\n          data.map((item,i)=>{\n            var j = i+1;\n            var dataArr = {\n              s_no : j,\n              project_name : item.name,\n              project_code : item.project_code,\n              client : item.client.name,\n              status : item.status,\n              id:item.id,\n              client_id: item.client.id,\n              assigned_to: item.assigned_to_user == null ? \"Unassigned\" :  item.assigned_to_user.name,\n              user_id: item.assigned_to_user == null ? \"Unassigned\" :  item.assigned_to_user.id,\n            }\n            proData.push(dataArr);\n\n          })\n         \n        }else{\n          toast.success(nextProps.apiRes.data.message, {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n          });\n\n          // const proData = {\n          //   user_type: 1,\n          //   token: this.state.token\n          // };\n\n          // this.listPro(proData);\n        }\n      }else{\n        toast.error(nextProps.apiRes.errorMessage, {\n          position: \"top-right\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        });\n      }\n    }\n  }\n\n  onChange = e => {\n    \n     this.setState({ filter: e.target.value });\n };\n\n  listPro(proData)\n  {\n    this.props.listProjects(proData);\n  }\n\n  // deletePro = e => {\n  //   const proData = {\n  //     project_code: e,\n  //     token: this.state.token\n  //   };\n    \n  //   this.props.deleteProjects(proData);\n  // };\n\n  render() {\n    const fields = [\n      { key: 's_no' },\n      { key: 'project_name' },\n      { key: 'assigned_to' }, \n      { key: 'project_code' },\n      { key: 'client'},\n      { key: 'status'},\n      { key: 'action' },\n      \n    ]\n\n    const { filter } = this.state;\n    const lowercasedFilter = filter.toLowerCase();\n    const filteredData = proData.filter(item => {\n      //console.log('item from ', item)\n      return Object.keys(item).some(key =>\n        typeof item[key] === \"string\" && item[key].toLowerCase().includes(lowercasedFilter)\n      );\n    });\n    console.log('filter data be',filteredData); \n\n    return (\n      <>\n        <CRow>\n          <CCol xs=\"12\" lg=\"12\">\n            <CCard>\n              <CCardHeader>\n                Projects List \n              </CCardHeader>\n              <CCardBody>\n\n              <CForm className=\"form-horizontal\">\n                  <CFormGroup row>\n                    <CCol xs=\"2\" md=\"3\">\n                      <CInput type=\"text\" placeholder=\"Search\" onChange={this.onChange}  name=\"search\" />\n                    </CCol>\n                  </CFormGroup>\n               </CForm>\n\n              <CDataTable\n                items={filteredData}\n                fields={fields}\n                striped\n                itemsPerPage={10}\n                pagination\n                scopedSlots = {{ \n                      'client':\n                      (item, index)=>{\n                       //console.log('client item is',item);\n                        return (\n                          <CCardBody>\n                            <CButton  className=\"ml-1\" to={\"/projects/clientdetail/\"+item.client_id}>{item.client}</CButton> \n                          </CCardBody>\n                      )\n                    }, \n                    'assigned_to':\n                    (item, index)=>{\n                      //console.log('item is',item);\n                      return (\n                        <CCardBody>\n                          <CButton size=\"sm\" style={{width:'100%'}} className=\"ml-1\" to={\"/users/detail/\"+item.user_id}>{item.assigned_to}</CButton> \n                        </CCardBody>\n                    )\n                  },\n                  'action':\n                      (item, index)=>{\n                        return (\n                          <CCardBody>\n                            <CButton size=\"sm\" color=\"info\" className=\"ml-1\" to={\"/project/detail/\"+item.id}>Show Details</CButton> \n                          </CCardBody>\n                      )\n                    }\n                }}\n              />\n              </CCardBody>\n            </CCard>\n          </CCol>\n        </CRow>\n\n        <ToastContainer />\n      </>\n    );\n  }\n}\n\nProjects.propTypes = {\n  listProjects: PropTypes.func.isRequired,\n  deleteProjects: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  apiRes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  apiRes: state.apiRes\n});\n\nexport default connect(\n  mapStateToProps,\n  { listProjects, deleteProjects, }\n)(Projects);","/home/android03/Projects/pms-dashboard/src/views/project/Add.js",["665","666","667"],"import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport store from \"./../../store\";\nimport jwt_decode from \"jwt-decode\";\nimport { logoutUser } from \"./../../actions/authActions\";\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CForm,\n  CFormGroup,\n  CInput,\n  CLabel,\n  CRow,\n  CSelect,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react';\n\nimport { listUsers } from \"../../actions/usersActions\";\nimport { listClients } from \"../../actions/clientActions\";\nimport { addPorject } from \"../../actions/projectActions\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nclass Addproject extends Component {\n  constructor() {\n    super();\n    this.state = {\n      token: \"\",\n      client_id:\"\",\n      name: \"\",\n      project_code:\"\",\n      assigned_to:\"\",\n      namedata:[],\n      manager:[],\n      submitStatus: false\n    };\n  }\n\n  componentDidMount() {\n    //console.log('path is', this.props)\n    if(localStorage.jwtToken)\n    { \n      const token = localStorage.jwtToken;\n      const decoded = jwt_decode(token);\n\n      this.setState({ token: decoded.token });\n      const clientData = {\n        user_type: 2,\n        token: decoded.token\n      };\n\n      const userData = {\n        user_type: 1,\n        token: decoded.token\n      };\n      this.props.listClients(clientData)\n      this.props.listUsers(userData)\n      // console.log(this.state.namedata);\n    }else{\n      store.dispatch(logoutUser());\n      this.props.history.push(\"/login\");\n    }\n  };\n\n  componentWillReceiveProps(nextProps) {\n    //console.log('next props',nextProps.apiRes.config.url)\n    //  this.setState({ namedata: nextProps.apiRes.data})\n    //  console.log('clllllllient data ',this.state.namedata);\n    if (nextProps.apiRes) {\n      if(nextProps.apiRes.status === 200)\n      {\n        toast.success(nextProps.apiRes.data.message, {\n          position: \"top-right\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        });\n        this.setState({ client_id:\"\"});\n        this.setState({ name: \"\" });\n        this.setState({ project_code:\"\" });\n        this.setState({ assigned_to:\"\" });\n\n        if(nextProps.apiRes.config.url === \"/api/v1/clients\"){ \n          this.setState({ namedata: nextProps.apiRes.data})\n        }else if(nextProps.apiRes.config.url === \"/api/v1/users\"){\n          this.setState({ manager: nextProps.apiRes.data})\n        }\n        //console.log('clllllllient data ',this.state.namedata);\n      }else{\n        toast.error(nextProps.apiRes.errorMessage, {\n          position: \"top-right\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        });\n      }\n\n      this.setState({submitStatus:false});\n     \n    }\n    if(this.state.submitStatus === true){\n      this.props.history.push(\"/projects\");\n    }\n  }\n\n  onChange = e => {\n      this.setState({ [e.target.client_id]: e.target.value });\n      this.setState({ [e.target.name]: e.target.value });\n      this.setState({ [e.target.project_code]:e.target.value});\n  };\n\n  onSubmit = e => {\n    this.setState({submitStatus:true});\n    // this.state.namedata.map((item)=>{\n    //   //console.log(item)\n    //   //console.log(this.state.client_id)\n    //   if(item.name === this.state.client_id){\n    //     console.log(item.id)\n    //     this.setState({client_id : item.id});\n    //     console.log(this.state.client_id)\n    //   }\n    // })\n\n    e.preventDefault();\n    const proData = {\n      client_id: parseInt(this.state.client_id),\n      name: this.state.name,\n      project_code: this.state.project_code,\n      token: this.state.token\n    };  \n    console.log('data is ', proData)\n    this.props.addPorject(proData);\n    \n  };\n\n  render() {\n    const { client_id, name, project_code, submitStatus,namedata, manager } = this.state;\n    //console.log(manager)\n    return (\n      <>\n        <CRow>\n          <CCol xs=\"12\" md=\"12\">\n            <CCard>\n              <CCardHeader>\n                Add Project\n              </CCardHeader>\n              <CCardBody>\n                <CForm className=\"form-horizontal\">\n\n                       \n                 <CFormGroup row>\n                    <CCol md=\"3\">\n                      <CLabel htmlFor=\"text-input\">Client Name</CLabel>\n                    </CCol>\n                    <CCol xs=\"12\" md=\"9\">\n                      {/* <CInput type=\"text\" placeholder=\"Client Id\" onChange={this.onChange} name=\"client_id\" value={client_id}/> */}\n                      \n                      <CSelect onChange={this.onChange} name=\"client_id\">\n                          <option value=\"\" disabled selected hidden>Select Client Name</option>\n                         {\n                           this.state.namedata.map((item => {\n                             //console.log(item.name)\n                              return(  <>\n                              <option value={item.id}>{item.name}</option></>)\n                           }))\n                         }\n              \n                      </CSelect>\n                   \n                    </CCol>\n                  </CFormGroup>\n                    \n                 <CFormGroup row>\n                    <CCol md=\"3\">\n                      <CLabel htmlFor=\"text-input\">Project Code</CLabel>\n                    </CCol>\n                    <CCol xs=\"12\" md=\"9\">\n                      <CInput type=\"text\" placeholder=\"Project Code\" onChange={this.onChange} name=\"project_code\" value={project_code}/>\n                    </CCol>\n                  </CFormGroup>\n\n                  <CFormGroup row>\n                    <CCol md=\"3\">\n                      <CLabel htmlFor=\"text-input\">Name</CLabel>\n                    </CCol>\n                    <CCol xs=\"12\" md=\"9\">\n                      <CInput type=\"text\" placeholder=\"Name\" onChange={this.onChange} name=\"name\" value={name} required/>\n                    </CCol>\n                  </CFormGroup>\n\n\n                </CForm>\n              </CCardBody>\n              <CCardFooter>\n                <CButton type=\"button\" size=\"sm\" color=\"primary\" disabled={submitStatus} onClick={this.onSubmit}><CIcon name=\"cil-scrubber\" /> Submit </CButton>\n              </CCardFooter>\n            </CCard>\n          </CCol>\n        </CRow>\n\n        <ToastContainer />\n      </>\n    );\n  }\n}\n\nAddproject.propTypes = {\n  listUsers: PropTypes.func.isRequired,\n  listClients: PropTypes.func.isRequired,\n  addPorject: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  apiRes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  apiRes: state.apiRes\n});\n\nexport default connect(\n  mapStateToProps,\n  { addPorject, listClients, listUsers }\n)(Addproject);","/home/android03/Projects/pms-dashboard/src/views/project/Edit.js",["668","669","670"],"import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport store from \"./../../store\";\nimport jwt_decode from \"jwt-decode\";\nimport { logoutUser } from \"./../../actions/authActions\";\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CForm,\n  CFormGroup,\n  CInput,\n  CLabel,\n  CRow,\n  CSelect,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react';\n\nimport { listUsers } from \"../../actions/usersActions\";\nimport { listClients } from \"../../actions/clientActions\";\nimport { listProjectsDetail, updateProjects } from \"../../actions/projectActions\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nclass Editproject extends Component {\n  constructor() {\n    super();\n    this.state = {\n      token: \"\",\n      client_id:\"\",\n      project_id:\"\",\n      name: \"\",\n      project_code:\"\",\n      assigned_to:\"\",\n      namedata:[],\n      manager:[],\n      submitStatus: false\n    };\n  }\n\n  componentDidMount() {\n    //console.log('path is', this.props)\n    if(localStorage.jwtToken)\n    { \n      const token = localStorage.jwtToken;\n      const decoded = jwt_decode(token);\n\n      this.setState({ token: decoded.token });\n      this.setState( {project_id :this.props.match.params.id})\n      const clientData = {\n        user_type: 2,\n        token: decoded.token\n      };\n\n      const userData = {\n        user_type: 1,\n        token: decoded.token\n      };\n      const proData = {\n        project_id: this.props.match.params.id,\n        token: decoded.token\n      };\n      this.props.listProjectsDetail(proData)\n      this.props.listClients(clientData)\n      this.props.listUsers(userData)\n      // console.log(this.state.namedata);\n    }else{\n      store.dispatch(logoutUser());\n      this.props.history.push(\"/login\");\n    }\n  };\n\n  componentWillReceiveProps(nextProps) {\n    console.log('next props',nextProps.apiRes.config)\n    //  this.setState({ namedata: nextProps.apiRes.data})\n    //  console.log('clllllllient data ',this.state.namedata);\n    if (nextProps.apiRes) {\n      if(nextProps.apiRes.status === 200)\n      {\n        toast.success(nextProps.apiRes.data.message, {\n          position: \"top-right\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        });\n        this.setState({ assigned_to:\"\" });\n\n        if(nextProps.apiRes.config.url === \"/api/v1/clients\"){ \n          this.setState({ namedata: nextProps.apiRes.data})\n        }else if(nextProps.apiRes.config.url === \"/api/v1/users\"){\n          this.setState({ manager: nextProps.apiRes.data})\n        }else if(nextProps.apiRes.config.url === \"/api/v1/projects/\"+this.state.project_id){\n          console.log('details api',nextProps.apiRes.data);\n          this.setState({ client_id: nextProps.apiRes.data.client.name});\n          this.setState({ name: nextProps.apiRes.data.name });\n          this.setState({ project_code: nextProps.apiRes.data.project_code });\n        }\n        \n      }else{\n        toast.error(nextProps.apiRes.errorMessage, {\n          position: \"top-right\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        });\n      }\n\n      this.setState({submitStatus:false});\n     \n    }\n    if(this.state.submitStatus === true){\n      this.props.history.push(\"/projects\");\n    }\n  }\n\n  onChange = e => {\n      this.setState({ [e.target.client_id]: e.target.value });\n      this.setState({ [e.target.name]: e.target.value });\n      this.setState({ [e.target.project_code]:e.target.value});\n      console.log(e.target.value)\n  };\n\n  onSubmit = e => {\n    this.setState({submitStatus:true});\n    // this.state.namedata.map((item)=>{\n    //   //console.log(item)\n    //   //console.log(this.state.client_id)\n    //   if(item.name === this.state.client_id){\n    //     console.log(item.id)\n    //     this.setState({client_id : item.id});\n    //     console.log(this.state.client_id)\n    //   }\n    // })\n\n    e.preventDefault();\n    const proData = {\n      project_id: parseInt(this.state.project_id),\n      client_id: parseInt(this.state.client_id),\n      name: this.state.name,\n      project_code: this.state.project_code,\n      assigned_to: parseInt(this.state.assigned_to),\n      token: this.state.token\n    };  \n    console.log('data is ', proData)\n    this.props.updateProjects(proData);\n    \n  };\n\n  render() {\n    const { client_id, name, project_code, assigned_to, submitStatus,namedata, manager } = this.state;\n    //console.log(manager)\n    return (\n      <>\n        <CRow>\n          <CCol xs=\"12\" md=\"12\">\n            <CCard>\n              <CCardHeader>\n                Edit Project\n              </CCardHeader>\n              <CCardBody>\n                <CForm className=\"form-horizontal\">\n\n                       \n                 <CFormGroup row>\n                    <CCol md=\"3\">\n                      <CLabel htmlFor=\"text-input\">Client Name</CLabel>\n                    </CCol>\n                    <CCol xs=\"12\" md=\"9\">\n                      {/* <CInput type=\"text\" placeholder=\"Client Id\" onChange={this.onChange} name=\"client_id\" value={client_id}/> */}\n                      \n                      <CSelect  onChange={this.onChange} name=\"client_id\">\n                          <option value=\"\" disabled selected hidden>Select Client </option>\n                         {\n                           namedata.map((item => {\n                             //console.log(item.name)\n                              return(  <>\n                              <option value={item.id}>{item.name}</option></>)\n                           }))\n                         }\n              \n                      </CSelect>\n                   \n                    </CCol>\n                  </CFormGroup>\n                    \n                 <CFormGroup row>\n                    <CCol md=\"3\">\n                      <CLabel htmlFor=\"text-input\">Project Code</CLabel>\n                    </CCol>\n                    <CCol xs=\"12\" md=\"9\">\n                      <CInput type=\"text\" placeholder=\"Project Code\" onChange={this.onChange} name=\"project_code\" value={project_code}/>\n                    </CCol>\n                  </CFormGroup>\n\n                  <CFormGroup row>\n                    <CCol md=\"3\">\n                      <CLabel htmlFor=\"text-input\">Name</CLabel>\n                    </CCol>\n                    <CCol xs=\"12\" md=\"9\">\n                      <CInput type=\"text\" placeholder=\"Name\" onChange={this.onChange} name=\"name\" value={name} required/>\n                    </CCol>\n                  </CFormGroup>\n\n                  <CFormGroup row>\n                    <CCol md=\"3\">\n                      <CLabel htmlFor=\"text-input\">Manager</CLabel>\n                    </CCol>\n                    <CCol xs=\"12\" md=\"9\">\n                      {/* <CInput type=\"text\" placeholder=\"Manager\" onChange={this.onChange} name=\"assigned_to\" value={assigned_to} required/> */}\n\n                      <CSelect onChange={this.onChange} name=\"assigned_to\">\n                          <option value=\"\" disabled selected hidden>Select Manager</option>\n                         {\n                           manager.map((item => {\n                             //console.log(item.user_type)\n                             if(item.user_type === \"manager\"){ \n                              return(  <>\n                              <option value={item.id}>{item.name}</option></>)\n                             }\n                           }))\n                         }\n                      </CSelect>\n\n                    </CCol>\n                  </CFormGroup>\n\n                </CForm>\n              </CCardBody>\n              <CCardFooter>\n                <CButton type=\"button\" size=\"sm\" color=\"primary\" disabled={submitStatus} onClick={this.onSubmit}><CIcon name=\"cil-scrubber\" /> Submit </CButton>\n              </CCardFooter>\n            </CCard>\n          </CCol>\n        </CRow>\n\n        <ToastContainer />\n      </>\n    );\n  }\n}\n\nEditproject.propTypes = {\n  listUsers: PropTypes.func.isRequired,\n  listClients: PropTypes.func.isRequired,\n  updateProjects: PropTypes.func.isRequired,\n  listProjectsDetail:PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  apiRes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  apiRes: state.apiRes\n});\n\nexport default connect(\n  mapStateToProps,\n  { updateProjects, listClients, listUsers, listProjectsDetail }\n)(Editproject);","/home/android03/Projects/pms-dashboard/src/actions/projectActions.js",["671"],"import axios from \"axios\";\nimport { GET_ERRORS, GET_SUCCESS } from \"./types\";\nimport PropTypes from \"prop-types\";\nimport constants from \"./../constants\";\n\nexport const listProjects = (proData) => (dispatch) => {\n  var instance = axios.create();\n  instance.defaults.headers.common = {};\n\n  instance\n    // .post(\"/api/v1/users\", userData)\n    .get(\"/api/v1/projects\", {\n      headers: {\n        authorization: \"Bearer \" + proData.token,\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n    .then((res) =>\n      dispatch({\n        type: GET_SUCCESS,\n        payload: res,\n      })\n    )\n    .catch((err) =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err,\n      })\n    );\n};\n\nexport const dataProjects = (proData) => (dispatch) => {\n  // var instance = axios.create();\n  // instance.defaults.headers.common = {};\n\n  // instance\n  //     .post(\"/api/v1/users\", userData)\n  //     .then(res =>\n  //         dispatch({\n  //             type: GET_SUCCESS,\n  //             payload: res,\n  //         })\n  //     ).catch(err =>\n  //     dispatch({\n  //         type: GET_ERRORS,\n  //         payload: err.response.data\n  //     })\n  // );\n  let config = {\n    method: \"GET\",\n    url: constants.baseUrl + \"/api/v1/projects\",\n    data: proData,\n    headers: {\n      Authorization: \"Bearer \" + proData.token,\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  console.log(\"CONFIG\", config);\n  axios(config).then(\n    (success) => {\n      console.log(\"SUCCESS\");\n      dispatch({\n        type: GET_SUCCESS,\n        payload: success,\n      });\n    },\n    (error) => {\n      console.log(\"ERROR\");\n      dispatch({\n        type: GET_ERRORS,\n        payload: error.response.data,\n      });\n    }\n  );\n};\n\nexport const addPorject = (proData) => (dispatch) => {\n  console.log(\"proData requesting with \", proData);\n  // var instance = axios.create();\n  // instance.defaults.headers.common = {};\n\n  // instance\n  //     .post(\"/api/v1/users\",{\n  //         headers: {\n  //             'authorization': \"Bearer \"+userData.token,\n  //             'Accept' : 'application/json',\n  //             'Content-Type': 'application/json'\n  //         }\n  //     })\n  //     .then(res =>{\n  //         console.log(\"RESPONSE\")\n  //         dispatch({\n  //             type: GET_SUCCESS,\n  //             payload: res,\n  //         })}\n  //     ).catch(err =>\n  //     dispatch({\n  //         type: GET_ERRORS,\n  //         payload: err.response.data\n  //     })\n  // );\n  let config = {\n    method: \"POST\",\n    url: constants.baseUrl + \"/api/v1/projects\",\n    data: proData,\n    headers: {\n      Authorization: \"Bearer \" + proData.token,\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  console.log(\"CONFIG\", config);\n  axios(config).then(\n    (success) => {\n      console.log(\"SUCCESS\");\n      dispatch({\n        type: GET_SUCCESS,\n        payload: success,\n      });\n    },\n    (error) => {\n      console.log(\"ERROR\");\n      dispatch({\n        type: GET_ERRORS,\n        payload: error,\n      });\n    }\n  );\n};\n\nexport const updateProjects = (proData) => (dispatch) => {\n  // var instance = axios.create();\n  // instance.defaults.headers.common = {};\n\n  // instance\n  //     .put(\"/api/v1/users\", userData)\n  //     .then(res =>\n  //         dispatch({\n  //             type: GET_SUCCESS,\n  //             payload: res,\n  //         })\n  //     ).catch(err =>\n  //     dispatch({\n  //         type: GET_ERRORS,\n  //         payload: err.response.data\n  //     })\n  // );\n\n  let config = {\n    method: \"PUT\",\n    url: constants.baseUrl + \"/api/v1/projects\",\n    data: proData,\n    headers: {\n      Authorization: \"Bearer \" + proData.token,\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  console.log(\"CONFIG\", config);\n  axios(config).then(\n    (success) => {\n      console.log(\"SUCCESS\");\n      dispatch({\n        type: GET_SUCCESS,\n        payload: success,\n      });\n    },\n    (error) => {\n      console.log(\"ERROR\");\n      dispatch({\n        type: GET_ERRORS,\n        payload: error.response.data,\n      });\n    }\n  );\n};\n\nexport const deleteProjects = (proData) => (dispatch) => {\n  console.log(\"delete clicked\");\n  var instance = axios.create();\n  instance.defaults.headers.common = {};\n\n  instance\n    .post(\"/api/v1/projects/:id\", proData)\n    .then((res) =>\n      dispatch({\n        type: GET_SUCCESS,\n        payload: res,\n      })\n    )\n    .catch((err) =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data,\n      })\n    );\n};\n\nexport const listProjectsDetail = (proData) => (dispatch) => {\n  var instance = axios.create();\n  instance.defaults.headers.common = {};\n\n  instance\n    // .post(\"/api/v1/users\", userData)\n    .get(\"/api/v1/projects/\" + proData.project_id, {\n      headers: {\n        authorization: \"Bearer \" + proData.token,\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n    .then((res) =>\n      dispatch({\n        type: GET_SUCCESS,\n        payload: res,\n      })\n    )\n    .catch((err) =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err,\n      })\n    );\n};\n\nexport const assignTech = (proData) => (dispatch) => {\n  console.log(\"proData requesting with \", proData);\n  let config = {\n    method: \"POST\",\n    url: constants.baseUrl + \"/api/v1/projects/technologies\",\n    data: proData,\n    headers: {\n      Authorization: \"Bearer \" + proData.token,\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  console.log(\"CONFIG\", config);\n  axios(config).then(\n    (success) => {\n      console.log(\"SUCCESS\");\n      dispatch({\n        type: GET_SUCCESS,\n        payload: success,\n      });\n    },\n    (error) => {\n      console.log(\"ERROR\");\n      dispatch({\n        type: GET_ERRORS,\n        payload: error.response.data,\n      });\n    }\n    //console.log(\"CONFIG\", config)\n    // axios(config).then(\n    //     success=>{\n    //         console.log(\"SUCCESS\")\n    //         dispatch({\n    //                     type: GET_SUCCESS,\n    //                     payload: success,\n    //         })\n    //     },\n    //     error=>{\n    //         console.log(\"ERROR\")\n    //         dispatch({\n    //                     type: GET_ERRORS,\n    //                     payload: error.response.data\n    //                 })\n    //     }\n    );\n};\n\nexport const proMilestone = (proData) => dispatch => {\n    console.log(\"mileData requesting with \", proData);\n    let config = {\n        method:'POST',\n        url:'http://3.22.108.178:3335/api/v1/projects/milestones',\n        data: proData,\n        headers:{\n            Authorization: \"Bearer \" + proData.token, Accept : 'application/json', 'Content-Type': 'application/json'\n        }\n    }\n    console.log(\"CONFIG\", config)\n    axios(config).then(\n        success=>{\n            console.log(\"SUCCESS\")\n            dispatch({\n                        type: GET_SUCCESS,\n                        payload: success,\n            })\n        },\n        error=>{\n            console.log(\"ERROR\")\n            dispatch({\n                        type: GET_ERRORS,\n                        payload: error.response.data\n                    })\n        }\n    );\n};\n\n","/home/android03/Projects/pms-dashboard/src/views/users/Assign.js",["672","673","674","675"],"import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport store from \"./../../store\";\nimport jwt_decode from \"jwt-decode\";\nimport { logoutUser } from \"./../../actions/authActions\";\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CForm,\n  CFormGroup,\n  CInput,\n  CLabel,\n  CRow,\n  CSelect,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react';\n\nimport { assignProject, listUsers } from \"../../actions/usersActions\";\nimport { listProjects } from \"../../actions/projectActions\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nclass Assignproject extends Component {\n  constructor() {\n    super();\n    this.state = {\n      token: \"\",\n      user_id:\"\",\n      resource: \"\",\n      project_id:\"\",\n      proinfo:[],\n      userinfo:[],\n      submitStatus: false,\n    };\n  }\n\n  componentDidMount() {\n    //console.log('path is', this.props)\n    if(localStorage.jwtToken)\n    { \n      const token = localStorage.jwtToken;\n      const decoded = jwt_decode(token);\n\n      this.setState({ token: decoded.token });\n      const proData = {\n        user_type: 2,\n        token: decoded.token\n      };\n\n      const userData = {\n        user_type: 1,\n        token: decoded.token\n      };\n      this.props.listProjects(proData)\n      this.props.listUsers(userData)\n    }else{\n      store.dispatch(logoutUser());\n      this.props.history.push(\"/login\");\n    }\n  };\n\n  componentWillReceiveProps(nextProps) {\n    //console.log('next props is',nextProps.apiRes.data)\n    //  this.setState({ namedata: nextProps.apiRes.data})\n    //  console.log('clllllllient data ',this.state.namedata);\n    if (nextProps.apiRes) {\n      if(nextProps.apiRes.status === 200)\n      {\n        toast.success(nextProps.apiRes.data.message, {\n          position: \"top-right\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        });\n        this.setState({ user_id:\"\"});\n        this.setState({ resource: \"\" });\n        this.setState({ project_id:\"\" });\n\n        if(nextProps.apiRes.config.url === \"/api/v1/projects\"){ \n          this.setState({ proinfo: nextProps.apiRes.data})\n        }else if(nextProps.apiRes.config.url === \"/api/v1/users\"){\n          this.setState({ userinfo: nextProps.apiRes.data})\n        }\n        //console.log('clllllllient data ',this.state.namedata);\n      }else{\n        toast.error(nextProps.apiRes.errorMessage, {\n          position: \"top-right\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        });\n      }\n\n      this.setState({submitStatus:false});\n    }\n    if(this.state.submitStatus === true){ \n      this.state.userinfo.map(item =>{\n        if(item.id === parseInt(this.state.user_id)){\n          this.props.history.push(\"/users/detail/\"+item.id);\n        }\n      })\n    }\n  }\n\n  onChange = e => {\n    //console.log(e.target.name);\n      this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onSubmit = e => {\n    this.setState({submitStatus:true});\n    //console.log('submit status is',this.submitStatus)\n\n    e.preventDefault();\n    const userData = {\n      project_id: parseInt(this.state.project_id),\n      resource: this.state.resource,\n      user_id: parseInt(this.state.user_id),\n      token: this.state.token\n    };  \n   // console.log('data after submit is ', userData)\n    this.props.assignProject(userData);\n    \n  };\n\n  render() {\n    const { user_id, project_id, resource, submitStatus, proinfo, userinfo } = this.state;\n    //console.log(manager)\n    return (\n      <>\n        <CRow>\n          <CCol xs=\"12\" md=\"12\">\n            <CCard>\n              <CCardHeader>\n                Assign Project\n              </CCardHeader>\n              <CCardBody>\n                <CForm className=\"form-horizontal\">\n\n                       \n                 <CFormGroup row>\n                    <CCol md=\"3\">\n                      <CLabel htmlFor=\"text-input\">Select Project</CLabel>\n                    </CCol>\n                    <CCol xs=\"12\" md=\"9\">\n                      <CSelect onChange={this.onChange} name=\"project_id\">\n                          <option value=\"\" disabled selected hidden>Select Project Name</option>\n                         {\n                           proinfo.map((item => {\n                             //console.log(item.name)\n                              return(  <>\n                              <option value={item.id}>{item.name}</option></>)\n                           }))\n                         }\n              \n                      </CSelect>\n                   \n                    </CCol>\n                  </CFormGroup>\n                    \n                 <CFormGroup row>\n                    <CCol md=\"3\">\n                      <CLabel htmlFor=\"text-input\">Select Resource Role</CLabel>\n                    </CCol>\n                    <CCol xs=\"12\" md=\"9\">\n                      {/* <CInput type=\"text\" placeholder=\"Project Code\" onChange={this.onChange} name=\"project_code\" value={project_code}/> */}\n\n                      <CSelect onChange={this.onChange} name=\"resource\" value={resource}>\n                          <option value=\"\" disabled selected hidden>Select Resource</option>\n                          <option value=\"manager\">Manager</option>\n                          <option value=\"user\">User</option>\n                      </CSelect>\n                    </CCol>\n                  </CFormGroup>\n\n                  <CFormGroup row>\n                    <CCol md=\"3\">\n                      <CLabel htmlFor=\"text-input\">Assign Resource</CLabel>\n                    </CCol>\n                    <CCol xs=\"12\" md=\"9\">\n                      {/* <CInput type=\"text\" placeholder=\"Project Code\" onChange={this.onChange} name=\"project_code\" value={project_code}/> */}\n\n                      <CSelect onChange={this.onChange} name=\"user_id\">\n                          <option value=\"\" disabled selected hidden>Select Resource Name</option>\n                         {\n                           userinfo.map((item => {\n                             //console.log(item.name)\n                              return(  <>\n                              <option value={item.id}>{item.name}</option></>)\n                           }))\n                         }\n              \n                      </CSelect>\n                    </CCol>\n                  </CFormGroup>\n\n                </CForm>\n              </CCardBody>\n              <CCardFooter>\n                <CButton type=\"button\" size=\"sm\" color=\"primary\" disabled={submitStatus} onClick={this.onSubmit}><CIcon name=\"cil-scrubber\" /> Submit </CButton>\n              </CCardFooter>\n            </CCard>\n          </CCol>\n        </CRow>\n\n        <ToastContainer />\n      </>\n    );\n  }\n}\n\nAssignproject.propTypes = {\n  listUsers: PropTypes.func.isRequired,\n  assignProject: PropTypes.func.isRequired,\n  listProjects: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  apiRes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  apiRes: state.apiRes\n});\n\nexport default connect(\n  mapStateToProps,\n  { assignProject, listProjects, listUsers }\n)(Assignproject);","/home/android03/Projects/pms-dashboard/src/views/users/Detail.js",["676","677","678","679","680","681","682","683","684","685","686","687","688","689","690"],"import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport store from \"./../../store\";\nimport ChipInput from 'material-ui-chip-input';\nimport jwt_decode from \"jwt-decode\";\nimport { logoutUser } from \"./../../actions/authActions\";\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CForm,\n  CFormGroup,\n  CInput,\n  CLabel,\n  CRow,\n  CSelect,\n  CDataTable\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\n\nimport {  listUsers,dataUsers,deleteUsers } from \"./../../actions/usersActions\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nvar projectData=[];\nvar skillData=[]\n\nclass UserDetail extends Component {\n  constructor() {\n      super();\n      this.state = {\n          token: \"\",\n          employee_code:\"\",\n          name: \"\",\n          email: \"\",\n          user_id:\"\",\n          user_type:\"\",\n          submitStatus: false\n      };\n  }\n\n  componentDidMount() {\n    if(localStorage.jwtToken)\n    { \n      const token = localStorage.jwtToken;\n      const decoded = jwt_decode(token);\n\n      if (this.props.match.params){\n        this.setState({ user_id: this.props.match.params.id, token: decoded.token });\n  \n        const userData = {\n          user_id: this.props.match.params.id,\n          token: decoded.token\n        };\n  \n       this.props.dataUsers(userData);\n      }else{\n        this.props.history.push(\"/users\");\n      }\n\n      const userData = {\n        user_type: 1,\n        token: decoded.token\n      };\n      this.props.listUsers(userData)\n    }else{\n      store.dispatch(logoutUser());\n      this.props.history.push(\"/login\");\n    }\n  };\n\n  componentWillReceiveProps(nextProps) {\n    //console.log(nextProps)\n    if (nextProps.apiRes) {\n      if(nextProps.apiRes.status === 200)\n      {\n        if(nextProps.apiRes.data.message == null)\n        {\n          projectData=[];\n          skillData=[];\n          for (let index = 0; index < nextProps.apiRes.data.length; index++) {\n            if(nextProps.apiRes.data[index].id == this.props.match.params.id){ \n\n               nextProps.apiRes.data[index].projects.map((item,i) =>{\n                var j = i+1;\n                var proObj={\n                  s_no:j,\n                  name: item.project.name      \n                } \n                 projectData.push(proObj);\n                // console.log('proData push',projectData)\n               });\n\n               nextProps.apiRes.data[index].skills.map((item,i) =>{\n                var j = i+1;\n                var skillObj={\n                  s_no:j,\n                  name:item.technology.name,\n                  proficiency: item.proficiency,      \n                } \n                 skillData.push(skillObj);\n                // console.log('proData push',projectData)\n               });\n              if(nextProps.apiRes.data[index].employee_code === null){ \n                this.setState({ employee_code: \"not available\" });\n              }else{\n                this.setState({ employee_code: nextProps.apiRes.data[index].employee_code });\n              }\n              this.setState({ name: nextProps.apiRes.data[index].name });\n              this.setState({ email: nextProps.apiRes.data[index].email }); \n              this.setState({ user_type: nextProps.apiRes.data[index].user_type }); \n              this.setState( {user_id:nextProps.apiRes.data[index].id} );         \n            }\n          }\n          //console.log('final projectdata is ',projectData)\n          \n        }else{\n          toast.success(nextProps.apiRes.data.message, {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n          });\n        }\n        // this.setState({ user_id:\"\"});\n        // this.setState({ resource: \"\" });\n        // this.setState({ project_id:\"\" });\n\n        if(nextProps.apiRes.config.url === \"/api/v1/projects\"){ \n          this.setState({ proinfo: nextProps.apiRes.data})\n        }else if(nextProps.apiRes.config.url === \"/api/v1/users\"){\n          this.setState({ userinfo: nextProps.apiRes.data})\n        }\n      }else{\n        toast.error(nextProps.apiRes.errorMessage, {\n          position: \"top-right\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        });\n      }\n\n      this.setState({submitStatus:false});\n    }\n    if(this.state.submitStatus === true){\n        this.props.history.push(\"/users\");\n    }\n  }\n\n  onChange = e => {\n      this.setState({ [e.target.name]: e.target.value });\n      \n  };\n\n  onSubmit = e => {\n    this.setState({submitStatus:true});\n    //console.log('submit status is',this.submitStatus)\n\n    e.preventDefault();\n    const userData = {\n      project_id: parseInt(this.state.project_id),\n      resource: this.state.resource,\n      user_id: parseInt(this.state.user_id),\n      token: this.state.token\n    };  \n   // console.log('data after submit is ', userData)\n    this.props.assignProject(userData);\n    \n  };\n\n  deleteUser = e => {\n    const userData = {\n      user_id: e,\n      token: this.state.token\n    };\n      \n    this.props.deleteUsers(userData);\n  };\n\n  render() {\n    const fields = [\n        { key: 's_no' },\n        { key: 'name' },\n        { key: 'action' },\n    ]\n    const skillfields = [\n      { key: 's_no' },\n      { key: 'name' },\n      { key: 'proficiency' },\n      { key: 'action' },\n  ]\n   \n    const { name, email, employee_code, user_type, projects_id, user_id, resource, proinfo, userinfo, submitStatus } = this.state;\n    return (\n      <>\n        <CRow>\n          <CCol xs=\"12\" md=\"12\">\n            <CCard>\n              <CCardHeader style={{display:'flex',justifyContent:'space-between',alignItems:'center'}}>\n                User Details\n                <div> \n                   <CButton size=\"sm\" color=\"info\" className=\"ml-1\" to={\"/users/edit/\"+user_id}>Edit</CButton>\n                   <CButton size=\"sm\" color=\"danger\" className=\"ml-1\" onClick={() => {if(window.confirm('Are you sure you want to delete this?')){this.deleteUser(user_id)};}}>Delete</CButton>\n                </div>\n              </CCardHeader>\n              <CCardBody>\n                <CForm className=\"form-horizontal\">\n                    \n                    <CFormGroup row>\n                       <CCol md=\"2\">\n                         <CLabel htmlFor=\"text-input\"><b>Employee Code :</b></CLabel>\n                       </CCol>\n                       <CCol xs=\"12\" md=\"\">\n                        <p>{employee_code}</p>\n                         {/* <CInput type=\"text\" placeholder=\"Employee Code\" onChange={this.onChange} name=\"employee_code\" value={employee_code}/> */}\n                       </CCol>\n                     </CFormGroup>\n\n                     <CFormGroup row>\n                       <CCol md=\"2\">\n                         <CLabel htmlFor=\"text-input\"><b>Name :</b></CLabel>\n                       </CCol>\n                       <CCol xs=\"12\" md=\"\">\n                        <p>{name}</p>\n                         {/* <CInput type=\"text\" placeholder=\"Employee Code\" onChange={this.onChange} name=\"employee_code\" value={employee_code}/> */}\n                       </CCol>\n                     </CFormGroup>\n\n                     <CFormGroup row>\n                       <CCol md=\"2\">\n                         <CLabel htmlFor=\"text-input\"><b>Email :</b></CLabel>\n                       </CCol>\n                       <CCol xs=\"12\" md=\"\">\n                        <p>{email}</p>\n                         {/* <CInput type=\"text\" placeholder=\"Employee Code\" onChange={this.onChange} name=\"employee_code\" value={employee_code}/> */}\n                       </CCol>\n                     </CFormGroup>\n   \n                     <CFormGroup row>\n                       <CCol md=\"2\">\n                         <CLabel htmlFor=\"text-input\"><b>User Type :</b></CLabel>\n                       </CCol>\n                       <CCol xs=\"12\" md=\"\">\n                        <p>{user_type}</p>\n                         {/* <CInput type=\"text\" placeholder=\"Employee Code\" onChange={this.onChange} name=\"employee_code\" value={employee_code}/> */}\n                       </CCol>\n                     </CFormGroup>\n\n                     <CFormGroup row style={{display:'flex',justifyContent:'space-between'}}>\n                       <CCol md=\"2\">\n                         <CLabel htmlFor=\"text-input\"><b>User Projects :</b></CLabel>\n                       </CCol>\n                       {/* <div style={{marginRight:'20px'}}> \n                           <CButton size=\"sm\" color=\"info\" className=\"ml-1\" to={\"/users/project/\"}>Add new project</CButton>\n                       </div> */}\n                     </CFormGroup>\n\n                     <CDataTable\n                items={projectData}\n                fields={fields}\n                striped\n                itemsPerPage={10}\n                pagination\n                 scopedSlots = {{\n                  'action':\n                      (item, index)=>{\n                        return (\n                          <CCardBody>\n                           <CButton size=\"sm\" color=\"danger\" className=\"ml-1\" onClick={() => {if(window.confirm('Are you sure you want to delete this?')){this.deleteUser(item.user_id)};}}>Delete</CButton>\n                          </CCardBody>\n                       )\n                     }\n                }}\n              />\n\n                         <CFormGroup row style={{display:'flex',justifyContent:'space-between'}}>\n                             <CCol md=\"2\">\n                               <CLabel htmlFor=\"text-input\"><b>User Skills :</b></CLabel>\n                             </CCol>\n                            <div style={{marginRight:'20px'}}> \n                               <CButton size=\"sm\" color=\"info\" className=\"ml-1\" to={\"/users/skill/\"}>Add new skill</CButton>\n                            </div>\n                         </CFormGroup>\n\n                         <CDataTable\n                items={skillData}\n                fields={skillfields}\n                striped\n                itemsPerPage={10}\n                pagination\n                 scopedSlots = {{\n                  'action':\n                      (item, index)=>{\n                        return (\n                          <CCardBody>\n                           <CButton size=\"sm\" color=\"danger\" className=\"ml-1\" onClick={() => {if(window.confirm('Are you sure you want to delete this?')){this.deleteUser(item.user_id)};}}>Delete</CButton>\n                          </CCardBody>\n                       )\n                     }\n                }}\n              />\n\n                   </CForm>\n                    \n\n                   \n              </CCardBody>\n            </CCard>\n    \n          </CCol>\n        </CRow>\n\n        \n\n        <ToastContainer />\n      </>\n    );\n  }\n}\n\nUserDetail.propTypes = {\n  listUsers: PropTypes.func.isRequired,\n  dataUsers: PropTypes.func.isRequired,\n  deleteUsers: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  apiRes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  apiRes: state.apiRes\n});\n\nexport default connect(\n  mapStateToProps,\n  { dataUsers, listUsers, deleteUsers }\n)(UserDetail);","/home/android03/Projects/pms-dashboard/src/views/users/Skill.js",["691","692","693","694"],"import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport store from \"./../../store\";\nimport jwt_decode from \"jwt-decode\";\nimport { logoutUser } from \"./../../actions/authActions\";\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CForm,\n  CFormGroup,\n  CInput,\n  CLabel,\n  CRow,\n  CSelect,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react';\n\nimport { addSkill, listUsers } from \"../../actions/usersActions\";\nimport { listTechnologies  } from \"../../actions/technologiesActions\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nclass Addskill extends Component {\n  constructor() {\n    super();\n    this.state = {\n      token: \"\",\n      user_id:\"\",\n      proficeincy: \"\",\n      primary:\"\",\n      technology_id:\"\",\n      techinfo:[],\n      userinfo:[],\n      submitStatus: false,\n    };\n  }\n\n  componentDidMount() {\n    //console.log('path is', this.props)\n    if(localStorage.jwtToken)\n    { \n      const token = localStorage.jwtToken;\n      const decoded = jwt_decode(token);\n\n      this.setState({ token: decoded.token });\n      const authData = {\n        user_type: 2,\n        token: decoded.token\n      };\n\n      const userData = {\n        user_type: 1,\n        token: decoded.token\n      };\n      this.props.listTechnologies(authData)\n      this.props.listUsers(userData)\n    }else{\n      store.dispatch(logoutUser());\n      this.props.history.push(\"/login\");\n    }\n  };\n\n  componentWillReceiveProps(nextProps) {\n    //console.log('next props is',nextProps.apiRes.data)\n    //  this.setState({ namedata: nextProps.apiRes.data})\n    //  console.log('clllllllient data ',this.state.namedata);\n    if (nextProps.apiRes) {\n      if(nextProps.apiRes.status === 200)\n      {\n        toast.success(nextProps.apiRes.data.message, {\n          position: \"top-right\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        });\n        this.setState({ user_id:\"\"});\n        this.setState({ proficeincy: \"\" });\n        this.setState({ technology_id:\"\" });\n        this.setState({primary:\"\"});\n\n        if(nextProps.apiRes.config.url === \"/api/v1/technologies\"){ \n          this.setState({ techinfo: nextProps.apiRes.data})\n        }else if(nextProps.apiRes.config.url === \"/api/v1/users\"){\n          this.setState({ userinfo: nextProps.apiRes.data})\n        }\n        //console.log('clllllllient data ',this.state.namedata);\n      }else{\n        toast.error(nextProps.apiRes.errorMessage, {\n          position: \"top-right\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        });\n      }\n\n      this.setState({submitStatus:false});\n    }\n    if(this.state.submitStatus === true){ \n      this.state.userinfo.map(item =>{\n        if(item.id === parseInt(this.state.user_id)){\n          this.props.history.push(\"/users/detail/\"+item.id);\n        }\n      })\n    }\n  }\n\n  onChange = e => {\n    console.log(e.target.name, e.target.value);\n      this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onSubmit = e => {\n    this.setState({submitStatus:true});\n    //console.log('submit status is',this.submitStatus)\n\n    e.preventDefault();\n    const userData = {\n      technology_id: parseInt(this.state.technology_id),\n      proficeincy: this.state.proficeincy,\n      primary:parseInt(this.state.primary),\n      user_id: parseInt(this.state.user_id),\n      token: this.state.token\n    };  \n    console.log('data after submit is ', userData)\n    this.props.addSkill(userData);\n    \n  };\n\n  render() {\n    const { user_id, project_id, proficeincy, primary, submitStatus, techinfo, userinfo } = this.state;\n    //console.log(manager)\n    return (\n      <>\n        <CRow>\n          <CCol xs=\"12\" md=\"12\">\n            <CCard>\n              <CCardHeader>\n                Add Skill\n              </CCardHeader>\n              <CCardBody>\n                <CForm className=\"form-horizontal\">\n\n                       \n                 <CFormGroup row>\n                    <CCol md=\"3\">\n                      <CLabel htmlFor=\"text-input\">User</CLabel>\n                    </CCol>\n                    <CCol xs=\"12\" md=\"9\">\n                      <CSelect onChange={this.onChange} name=\"user_id\">\n                          <option value=\"\" disabled selected hidden>Select User Name</option>\n                         {\n                           userinfo.map((item => {\n                             //console.log(item.name)\n                              return(  <>\n                              <option value={item.id}>{item.name}</option></>)\n                           }))\n                         }\n              \n                      </CSelect>\n                   \n                    </CCol>\n                  </CFormGroup>\n                    \n                 <CFormGroup row>\n                    <CCol md=\"3\">\n                      <CLabel htmlFor=\"text-input\">Proficeincy</CLabel>\n                    </CCol>\n                    <CCol xs=\"12\" md=\"9\">\n                      {/* <CInput type=\"text\" placeholder=\"Project Code\" onChange={this.onChange} name=\"project_code\" value={project_code}/> */}\n\n                      <CSelect onChange={this.onChange} name=\"proficeincy\" value={proficeincy}>\n                          <option value=\"\" disabled selected hidden>Select Proficeincy</option>\n                          <option value=\"beginner\">Beginner</option>\n                          <option value=\"intermediate\">Intermediate</option>\n                          <option value=\"expert\">Expert</option>\n                      </CSelect>\n                    </CCol>\n                  </CFormGroup>\n\n                  <CFormGroup row>\n                    <CCol md=\"3\">\n                      <CLabel htmlFor=\"text-input\">Primary</CLabel>\n                    </CCol>\n                    <CCol xs=\"12\" md=\"9\">\n                      {/* <CInput type=\"text\" placeholder=\"Project Code\" onChange={this.onChange} name=\"project_code\" value={project_code}/> */}\n\n                      <CSelect onChange={this.onChange} name=\"primary\" value={primary}>\n                          <option value=\"\" disabled selected hidden>Select Primary</option>\n                          <option value=\"1\">True</option>\n                          <option value=\"0\">False</option>\n                      </CSelect>\n                    </CCol>\n                  </CFormGroup>\n\n                  <CFormGroup row>\n                    <CCol md=\"3\">\n                      <CLabel htmlFor=\"text-input\">Technology</CLabel>\n                    </CCol>\n                    <CCol xs=\"12\" md=\"9\">\n                      {/* <CInput type=\"text\" placeholder=\"Project Code\" onChange={this.onChange} name=\"project_code\" value={project_code}/> */}\n\n                      <CSelect onChange={this.onChange} name=\"technology_id\">\n                          <option value=\"\" disabled selected hidden>Select Technology Name</option>\n                         {\n                           techinfo.map((item => {\n                             //console.log('techinfo',item)\n                              return(  <>\n                              <option value={item.id}>{item.name}</option></>)\n                           }))\n                         }\n              \n                      </CSelect>\n                    </CCol>\n                  </CFormGroup>\n\n                </CForm>\n              </CCardBody>\n              <CCardFooter>\n                <CButton type=\"button\" size=\"sm\" color=\"primary\" disabled={submitStatus} onClick={this.onSubmit}><CIcon name=\"cil-scrubber\" /> Submit </CButton>\n              </CCardFooter>\n            </CCard>\n          </CCol>\n        </CRow>\n\n        <ToastContainer />\n      </>\n    );\n  }\n}\n\nAddskill.propTypes = {\n  listUsers: PropTypes.func.isRequired,\n  addSkill: PropTypes.func.isRequired,\n  listTechnologies: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  apiRes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  apiRes: state.apiRes\n});\n\nexport default connect(\n  mapStateToProps,\n  { addSkill, listTechnologies, listUsers }\n)(Addskill);","/home/android03/Projects/pms-dashboard/src/views/project/Detail.js",["695","696","697","698","699","700","701","702","703","704"],"import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport store from \"./../../store\";\nimport ChipInput from 'material-ui-chip-input';\nimport jwt_decode from \"jwt-decode\";\nimport { logoutUser } from \"./../../actions/authActions\";\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CForm,\n  CFormGroup,\n  CInput,\n  CLabel,\n  CRow,\n  CSelect,\n  CDataTable\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\n\nimport {  listProjects,dataProjects,listProjectsDetail } from \"./../../actions/projectActions\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nvar projectData=[];\nvar mileData=[];\n\nclass ProjectDetail extends Component {\n  constructor() {\n      super();\n      this.state = {\n          token: \"\",\n          project_code:\"\",\n          name: \"\",\n          client: \"\",\n          project_id:\"\",\n          manager:\"\",\n          user_type:\"\",\n          submitStatus: false\n      };\n  }\n\n  componentDidMount() {\n    if(localStorage.jwtToken)\n    { \n      const token = localStorage.jwtToken;\n      const decoded = jwt_decode(token);\n      console.log('type from token', decoded.user_type);\n      this.setState({ user_type: decoded.user_type});\n\n      if (this.props.match.params){\n        this.setState({ project_id: this.props.match.params.id, token: decoded.token });\n  \n        const proData = {\n          project_id: this.props.match.params.id,\n          token: decoded.token\n        };\n  \n       this.props.listProjectsDetail(proData);\n      }else{\n        this.props.history.push(\"/projects\");\n      }\n\n    }else{\n      store.dispatch(logoutUser());\n      this.props.history.push(\"/login\");\n    }\n  };\n\n  componentWillReceiveProps(nextProps) {\n    console.log('next prop is ',nextProps.apiRes.data)\n    if (nextProps.apiRes) {\n      if(nextProps.apiRes.status === 200)\n      {\n        \n          projectData=[];\n          mileData=[];\n          \n            if(nextProps.apiRes.data.id == this.props.match.params.id){ \n\n               nextProps.apiRes.data.technologies.map((item,i) =>{\n                var j = i+1;\n                var proObj={\n                  s_no:j,\n                  name: item.technology.name,\n                  type: item.name      \n                } \n                 projectData.push(proObj);\n                 console.log('proData push',projectData)\n               });\n\n               nextProps.apiRes.data.milestones.map((item,i) =>{\n                var j = i+1;\n                var mileObj={\n                  s_no:j,\n                  name: item.name,\n                  percentage: item.percentage,\n                  due_amount: item.due_amount,\n                  due_date: item.due_date,\n                  realized_amount: item.realized_amount,\n                  realized_date: item.realized_date,\n                  status: item.status,      \n                } \n                 mileData.push(mileObj);\n                 console.log('mile data push',mileData)\n               });\n\n              if(nextProps.apiRes.data.project_code === null){ \n                this.setState({ project_code: \"not available\" });\n              }else{\n                this.setState({ project_code: nextProps.apiRes.data.project_code });\n              }\n              this.setState({ name: nextProps.apiRes.data.name });\n              this.setState({ client: nextProps.apiRes.data.client.name }); \n              this.setState({ manager:  nextProps.apiRes.data.assigned_to_user == null ? \"Unassigned\" :  nextProps.apiRes.data.assigned_to_user.name}); \n              this.setState( {project_id:nextProps.apiRes.data.id} );         \n            }\n          \n      }else{\n        toast.error(nextProps.apiRes.errorMessage, {\n          position: \"top-right\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        });\n      }\n\n      this.setState({submitStatus:false});\n    }\n    // if(this.state.submitStatus === true){\n    //     this.props.history.push(\"/users\");\n    // }\n  }\n\n\n\n  render() {\n    const fields = [\n        { key: 's_no' },\n        { key: 'name' },\n        { key: 'type'},\n        { key: 'action' },\n    ]\n    const milefields = [\n      { key: 's_no' },\n      { key: 'name' },\n      { key: 'percentage'},\n      { key: 'due_amount'},\n      { key: 'due_date'},\n      { key: 'realized_amount'},\n      { key: 'realized_date'},\n      { key: 'status'},\n      { key: 'action' },\n  ]\n   \n    const { name, client, project_code, manager, project_id,user_type, submitStatus } = this.state;\n    return (\n      <>\n        <CRow>\n          <CCol xs=\"12\" md=\"12\">\n            <CCard>\n              <CCardHeader style={{display:'flex',justifyContent:'space-between',alignItems:'center'}}>\n                Project Details\n                <div> \n                   <CButton size=\"sm\" color=\"info\" className=\"ml-1\" to={\"/projects/edit/\"+project_id}>Edit</CButton>\n                   <CButton size=\"sm\" color=\"danger\" className=\"ml-1\">Delete</CButton>\n                </div>\n              </CCardHeader>\n              <CCardBody>\n                <CForm className=\"form-horizontal\">\n                    \n                    <CFormGroup row>\n                       <CCol md=\"2\">\n                         <CLabel htmlFor=\"text-input\"><b>Project Code :</b></CLabel>\n                       </CCol>\n                       <CCol xs=\"12\" md=\"\">\n                        <p>{project_code}</p>\n                         {/* <CInput type=\"text\" placeholder=\"Employee Code\" onChange={this.onChange} name=\"employee_code\" value={employee_code}/> */}\n                       </CCol>\n                     </CFormGroup>\n\n                     <CFormGroup row>\n                       <CCol md=\"2\">\n                         <CLabel htmlFor=\"text-input\"><b>Project Name :</b></CLabel>\n                       </CCol>\n                       <CCol xs=\"12\" md=\"\">\n                        <p>{name}</p>\n                         {/* <CInput type=\"text\" placeholder=\"Employee Code\" onChange={this.onChange} name=\"employee_code\" value={employee_code}/> */}\n                       </CCol>\n                     </CFormGroup>\n\n                     <CFormGroup row>\n                       <CCol md=\"2\">\n                         <CLabel htmlFor=\"text-input\"><b>Client :</b></CLabel>\n                       </CCol>\n                       <CCol xs=\"12\" md=\"\">\n                        <p>{client}</p>\n                         {/* <CInput type=\"text\" placeholder=\"Employee Code\" onChange={this.onChange} name=\"employee_code\" value={employee_code}/> */}\n                       </CCol>\n                     </CFormGroup>\n   \n                     <CFormGroup row>\n                       <CCol md=\"2\">\n                         <CLabel htmlFor=\"text-input\"><b>Assigned Manager :</b></CLabel>\n                       </CCol>\n                       <CCol xs=\"12\" md=\"\">\n                        <p>{manager}</p>\n                         {/* <CInput type=\"text\" placeholder=\"Employee Code\" onChange={this.onChange} name=\"employee_code\" value={employee_code}/> */}\n                       </CCol>\n                     </CFormGroup>\n\n                     <CFormGroup row style={{display:'flex',justifyContent:'space-between'}}>\n                       <CCol md=\"2\">\n                         <CLabel htmlFor=\"text-input\"><b>Technology :</b></CLabel>\n                       </CCol>\n                       <div style={{marginRight:'20px'}}> \n                           <CButton size=\"sm\" color=\"info\" className=\"ml-1\" to={\"/projects/technologies\"}>Assign Technology</CButton>\n                       </div>\n                     </CFormGroup>\n\n                     <CDataTable\n                items={projectData}\n                fields={fields}\n                striped\n                itemsPerPage={10}\n                pagination\n                 scopedSlots = {{\n                  'action':\n                      (item, index)=>{\n                        return (\n                          <CCardBody>\n                           <CButton size=\"sm\" color=\"danger\" className=\"ml-1\" onClick={() => {if(window.confirm('Are you sure you want to delete this?')){this.deleteUser(item.user_id)};}}>Delete</CButton>\n                          </CCardBody>\n                       )\n                     }\n                }}\n              />\n\n                     <CFormGroup row style={{display:'flex',justifyContent:'space-between'}}>\n                       <CCol md=\"2\">\n                         <CLabel htmlFor=\"text-input\"><b>User :</b></CLabel>\n                       </CCol>\n                       <div style={{marginRight:'20px'}}> \n                           <CButton size=\"sm\" color=\"info\" className=\"ml-1\" to={\"/projects/user\"}>Assign User</CButton>\n                       </div>\n                     </CFormGroup>\n\n                     \n                  {(this.state.user_type === \"admin\" || this.state.user_type === \"manager\" || this.state.user_type === \"sales\") && (\n                     <div row >\n                       <div style={{display:'flex',justifyContent:'space-between', alignItems:'center',marginBottom:\"20px\"}}> \n                            <CCol md=\"2\" style={{paddingLeft:\"0px\"}}>\n                               <CLabel htmlFor=\"text-input\"><b>Project Milestones :</b></CLabel>\n                            </CCol>\n                            <div> \n                                <CButton size=\"sm\" color=\"info\" className=\"ml-1\" to={\"/projects/milestones\"}>Create Milestone</CButton>\n                            </div>\n                       </div>\n                        \n                       <CDataTable\n                       items={ mileData }\n                       fields={milefields}\n                       striped\n                       itemsPerPage={10}\n                       pagination\n                        scopedSlots = {{\n                         'action':\n                             (item, index)=>{\n                               return (\n                                 <CCardBody>\n                                  <CButton size=\"sm\" color=\"danger\" className=\"ml-1\" onClick={() => {if(window.confirm('Are you sure you want to delete this?')){this.deleteUser(item.user_id)};}}>Delete</CButton>\n                                 </CCardBody>\n                              )\n                            }\n                       }}\n                     />\n              \n                     </div>\n                   )}\n\n                   </CForm>\n                    \n\n                   \n              </CCardBody>\n            </CCard>\n    \n          </CCol>\n        </CRow>\n\n        \n\n        <ToastContainer />\n      </>\n    );\n  }\n}\n\nProjectDetail.propTypes = {\n  listProjects: PropTypes.func.isRequired,\n  dataProjects: PropTypes.func.isRequired,\n  listProjectsDetail:PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  apiRes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  apiRes: state.apiRes\n});\n\nexport default connect(\n  mapStateToProps,\n  { dataProjects, listProjects, listProjectsDetail }\n)( ProjectDetail );","/home/android03/Projects/pms-dashboard/src/views/project/Assign.js",["705","706","707"],"import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport store from \"./../../store\";\nimport jwt_decode from \"jwt-decode\";\nimport { logoutUser } from \"./../../actions/authActions\";\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CForm,\n  CFormGroup,\n  CInput,\n  CLabel,\n  CRow,\n  CSelect,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react';\n\nimport { listTechnologies } from \"../../actions/technologiesActions\";\nimport { listProjects, assignTech } from \"../../actions/projectActions\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nclass Assigntech extends Component {\n  constructor() {\n    super();\n    this.state = {\n      token: \"\",\n      technology_id:\"\",\n      name: \"\",\n      project_id:\"\",\n      proinfo:[],\n      techinfo:[],\n      submitStatus: false,\n    };\n  }\n\n  componentDidMount() {\n    //console.log('path is', this.props)\n    if(localStorage.jwtToken)\n    { \n      const token = localStorage.jwtToken;\n      const decoded = jwt_decode(token);\n\n      this.setState({ token: decoded.token });\n      const proData = {\n        user_type: 2,\n        token: decoded.token\n      };\n\n      const authData = {\n        user_type: 1,\n        token: decoded.token\n      };\n      this.props.listProjects(proData)\n      this.props.listTechnologies(authData)\n    }else{\n      store.dispatch(logoutUser());\n      this.props.history.push(\"/login\");\n    }\n  };\n\n  componentWillReceiveProps(nextProps) {\n    //console.log('next props is',nextProps.apiRes.data)\n    //  this.setState({ namedata: nextProps.apiRes.data})\n    //  console.log('clllllllient data ',this.state.namedata);\n    if (nextProps.apiRes) {\n      if(nextProps.apiRes.status === 200)\n      {\n        toast.success(nextProps.apiRes.data.message, {\n          position: \"top-right\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        });\n        this.setState({ technology_id:\"\"});\n        this.setState({ name: \"\" });\n        this.setState({ project_id:\"\" });\n\n        if(nextProps.apiRes.config.url === \"/api/v1/projects\"){ \n          this.setState({ proinfo: nextProps.apiRes.data})\n        }else if(nextProps.apiRes.config.url === \"/api/v1/technologies\"){\n          this.setState({ techinfo: nextProps.apiRes.data})\n        }\n        //console.log('clllllllient data ',this.state.namedata);\n      }else{\n        toast.error(nextProps.apiRes.errorMessage, {\n          position: \"top-right\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        });\n      }\n\n      this.setState({submitStatus:false});\n    }\n    if(this.state.submitStatus === true){ \n      this.state.proinfo.map(item =>{\n        if(item.id === parseInt(this.state.project_id)){\n          this.props.history.push(\"/project/detail/\"+item.id);\n        }\n      })\n    }\n  }\n\n  onChange = e => {\n    //console.log(e.target.name);\n      this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onSubmit = e => {\n    this.setState({submitStatus:true});\n    //console.log('submit status is',this.submitStatus)\n\n    e.preventDefault();\n    const proData = {\n      technology_id: parseInt(this.state.technology_id),\n      name: this.state.name,\n      project_id: parseInt(this.state.project_id),\n      token: this.state.token\n    };  \n   console.log('data after submit is ', proData)\n    this.props.assignTech(proData);\n    \n  };\n\n  render() {\n    const { technology_id, project_id, name, submitStatus, proinfo, techinfo } = this.state;\n    //console.log(manager)\n    return (\n      <>\n        <CRow>\n          <CCol xs=\"12\" md=\"12\">\n            <CCard>\n              <CCardHeader>\n                Assign Technology\n              </CCardHeader>\n              <CCardBody>\n                <CForm className=\"form-horizontal\">\n\n                       \n                 <CFormGroup row>\n                    <CCol md=\"3\">\n                      <CLabel htmlFor=\"text-input\">Select Project</CLabel>\n                    </CCol>\n                    <CCol xs=\"12\" md=\"9\">\n                      <CSelect onChange={this.onChange} name=\"project_id\">\n                          <option value=\"\" disabled selected hidden>Select Project Name</option>\n                         {\n                           proinfo.map((item => {\n                             //console.log(item.name)\n                              return(  <>\n                              <option value={item.id}>{item.name}</option></>)\n                           }))\n                         }\n              \n                      </CSelect>\n                   \n                    </CCol>\n                  </CFormGroup>\n\n                  <CFormGroup row>\n                     <CCol md=\"3\">\n                        <CLabel htmlFor=\"text-input\">Technology Name</CLabel>\n                     </CCol>\n                     <CCol xs=\"12\" md=\"9\">\n                      <CInput type=\"text\" placeholder=\"Technology Name\" onChange={this.onChange} name=\"name\" value={name}/>\n                    </CCol>\n                  </CFormGroup>\n                    \n\n                  <CFormGroup row>\n                    <CCol md=\"3\">\n                      <CLabel htmlFor=\"text-input\">Select Technology</CLabel>\n                    </CCol>\n                    <CCol xs=\"12\" md=\"9\">\n                      {/* <CInput type=\"text\" placeholder=\"Project Code\" onChange={this.onChange} name=\"project_code\" value={project_code}/> */}\n\n                      <CSelect onChange={this.onChange} name=\"technology_id\">\n                          <option value=\"\" disabled selected hidden>Select Technology Name</option>\n                         {\n                           techinfo.map((item => {\n                             //console.log(item.name)\n                              return(  <>\n                              <option value={item.id}>{item.name}</option></>)\n                           }))\n                         }\n              \n                      </CSelect>\n                    </CCol>\n                  </CFormGroup>\n\n                </CForm>\n              </CCardBody>\n              <CCardFooter>\n                <CButton type=\"button\" size=\"sm\" color=\"primary\" disabled={submitStatus} onClick={this.onSubmit}><CIcon name=\"cil-scrubber\" /> Submit </CButton>\n              </CCardFooter>\n            </CCard>\n          </CCol>\n        </CRow>\n\n        <ToastContainer />\n      </>\n    );\n  }\n}\n\nAssigntech.propTypes = {\n  listTechnologies : PropTypes.func.isRequired,\n  assignTech: PropTypes.func.isRequired,\n  listProjects: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  apiRes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  apiRes: state.apiRes\n});\n\nexport default connect(\n  mapStateToProps,\n  { assignTech, listProjects, listTechnologies  }\n)(Assigntech);","/home/android03/Projects/pms-dashboard/src/views/project/Assignuser.js",["708","709","710","711"],"import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport store from \"../../store\";\nimport jwt_decode from \"jwt-decode\";\nimport { logoutUser } from \"../../actions/authActions\";\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CForm,\n  CFormGroup,\n  CInput,\n  CLabel,\n  CRow,\n  CSelect,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react';\n\nimport { assignProject, listUsers } from \"../../actions/usersActions\";\nimport { listProjects } from \"../../actions/projectActions\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nclass Assignproject extends Component {\n  constructor() {\n    super();\n    this.state = {\n      token: \"\",\n      user_id:\"\",\n      resource: \"\",\n      project_id:\"\",\n      proinfo:[],\n      userinfo:[],\n      submitStatus: false,\n    };\n  }\n\n  componentDidMount() {\n    //console.log('path is', this.props)\n    if(localStorage.jwtToken)\n    { \n      const token = localStorage.jwtToken;\n      const decoded = jwt_decode(token);\n\n      this.setState({ token: decoded.token });\n      const proData = {\n        user_type: 2,\n        token: decoded.token\n      };\n\n      const userData = {\n        user_type: 1,\n        token: decoded.token\n      };\n      this.props.listProjects(proData)\n      this.props.listUsers(userData)\n    }else{\n      store.dispatch(logoutUser());\n      this.props.history.push(\"/login\");\n    }\n  };\n\n  componentWillReceiveProps(nextProps) {\n    //console.log('next props is',nextProps.apiRes.data)\n    //  this.setState({ namedata: nextProps.apiRes.data})\n    //  console.log('clllllllient data ',this.state.namedata);\n    if (nextProps.apiRes) {\n      if(nextProps.apiRes.status === 200)\n      {\n        toast.success(nextProps.apiRes.data.message, {\n          position: \"top-right\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        });\n        this.setState({ user_id:\"\"});\n        this.setState({ resource: \"\" });\n        this.setState({ project_id:\"\" });\n\n        if(nextProps.apiRes.config.url === \"/api/v1/projects\"){ \n          this.setState({ proinfo: nextProps.apiRes.data})\n        }else if(nextProps.apiRes.config.url === \"/api/v1/users\"){\n          this.setState({ userinfo: nextProps.apiRes.data})\n        }\n        //console.log('clllllllient data ',this.state.namedata);\n      }else{\n        toast.error(nextProps.apiRes.errorMessage, {\n          position: \"top-right\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        });\n      }\n\n      this.setState({submitStatus:false});\n    }\n    if(this.state.submitStatus === true){ \n      console.log('proinfo',this.state.proinfo, this.state.project_id)\n      this.state.proinfo.map(item =>{\n        if(item.id === parseInt(this.state.project_id)){\n          this.props.history.push(\"/project/detail/\"+item.id);\n        }\n      })\n    }\n  }\n\n  onChange = e => {\n    //console.log(e.target.name);\n      this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onSubmit = e => {\n    this.setState({submitStatus:true});\n    //console.log('submit status is',this.submitStatus)\n\n    e.preventDefault();\n    const userData = {\n      project_id: parseInt(this.state.project_id),\n      resource: this.state.resource,\n      user_id: parseInt(this.state.user_id),\n      token: this.state.token\n    };  \n   // console.log('data after submit is ', userData)\n    this.props.assignProject(userData);\n    \n  };\n\n  render() {\n    const { user_id, project_id, resource, submitStatus, proinfo, userinfo } = this.state;\n    //console.log(manager)\n    return (\n      <>\n        <CRow>\n          <CCol xs=\"12\" md=\"12\">\n            <CCard>\n              <CCardHeader>\n                Assign User\n              </CCardHeader>\n              <CCardBody>\n                <CForm className=\"form-horizontal\">\n\n                       \n                 <CFormGroup row>\n                    <CCol md=\"3\">\n                      <CLabel htmlFor=\"text-input\">Select Project</CLabel>\n                    </CCol>\n                    <CCol xs=\"12\" md=\"9\">\n                      <CSelect onChange={this.onChange} name=\"project_id\">\n                          <option value=\"\" disabled selected hidden>Select Project Name</option>\n                         {\n                           proinfo.map((item => {\n                             //console.log(item.name)\n                              return(  <>\n                              <option value={item.id}>{item.name}</option></>)\n                           }))\n                         }\n              \n                      </CSelect>\n                   \n                    </CCol>\n                  </CFormGroup>\n                    \n                 <CFormGroup row>\n                    <CCol md=\"3\">\n                      <CLabel htmlFor=\"text-input\">Select Resource Role</CLabel>\n                    </CCol>\n                    <CCol xs=\"12\" md=\"9\">\n                      {/* <CInput type=\"text\" placeholder=\"Project Code\" onChange={this.onChange} name=\"project_code\" value={project_code}/> */}\n\n                      <CSelect onChange={this.onChange} name=\"resource\" value={resource}>\n                          <option value=\"\" disabled selected hidden>Select Resource</option>\n                          <option value=\"manager\">Manager</option>\n                          <option value=\"user\">User</option>\n                      </CSelect>\n                    </CCol>\n                  </CFormGroup>\n\n                  <CFormGroup row>\n                    <CCol md=\"3\">\n                      <CLabel htmlFor=\"text-input\">Assign Resource</CLabel>\n                    </CCol>\n                    <CCol xs=\"12\" md=\"9\">\n                      {/* <CInput type=\"text\" placeholder=\"Project Code\" onChange={this.onChange} name=\"project_code\" value={project_code}/> */}\n\n                      <CSelect onChange={this.onChange} name=\"user_id\">\n                          <option value=\"\" disabled selected hidden>Select Resource Name</option>\n                         {\n                           userinfo.map((item => {\n                             //console.log(item.name)\n                              return(  <>\n                              <option value={item.id}>{item.name}</option></>)\n                           }))\n                         }\n              \n                      </CSelect>\n                    </CCol>\n                  </CFormGroup>\n\n                </CForm>\n              </CCardBody>\n              <CCardFooter>\n                <CButton type=\"button\" size=\"sm\" color=\"primary\" disabled={submitStatus} onClick={this.onSubmit}><CIcon name=\"cil-scrubber\" /> Submit </CButton>\n              </CCardFooter>\n            </CCard>\n          </CCol>\n        </CRow>\n\n        <ToastContainer />\n      </>\n    );\n  }\n}\n\nAssignproject.propTypes = {\n  listUsers: PropTypes.func.isRequired,\n  assignProject: PropTypes.func.isRequired,\n  listProjects: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  apiRes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  apiRes: state.apiRes\n});\n\nexport default connect(\n  mapStateToProps,\n  { assignProject, listProjects, listUsers }\n)(Assignproject);","/home/android03/Projects/pms-dashboard/src/views/project/Clientdetail.js",["712","713","714","715","716","717","718","719","720"],"import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport store from \"./../../store\";\nimport jwt_decode from \"jwt-decode\";\nimport { logoutUser } from \"./../../actions/authActions\";\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CForm,\n  CFormGroup,\n  CInput,\n  CLabel,\n  CRow,\n  CSelect,\n  CDataTable\n} from '@coreui/react'\n\nimport {  listClients } from \"./../../actions/clientActions\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\nclass ProClientDetail extends Component {\n  constructor() {\n      super();\n      this.state = {\n          token: \"\",\n          client_code:\"\",\n          name: \"\",\n          address: \"\",\n          client_id:\"\",\n          country:\"\",\n          submitStatus: false\n      };\n  }\n\n  componentDidMount() {\n    if(localStorage.jwtToken)\n    { \n      const token = localStorage.jwtToken;\n      const decoded = jwt_decode(token);\n      //console.log('client_id',this.props.match.params)\n      if (this.props.match.params){\n        this.setState({ client_id: this.props.match.params.id, token: decoded.token });\n  \n        const clientData = {\n          client_id: this.props.match.params.id,\n          token: decoded.token\n        };\n  \n       this.props.listClients(clientData);\n      }else{\n        this.props.history.push(\"/projects\");\n      }\n\n    }else{\n      store.dispatch(logoutUser());\n      this.props.history.push(\"/login\");\n    }\n  };\n\n  componentWillReceiveProps(nextProps) {\n    console.log('next prop is ',nextProps.apiRes.data)\n    if (nextProps.apiRes) {\n      if(nextProps.apiRes.status === 200)\n      {          \n        nextProps.apiRes.data.map((item,i) =>{\n            if(item.id == this.props.match.params.id){ \n                this.setState({ name: item.name });\n                this.setState({ client_code: item.client_code }); \n                this.setState({ address: item.address }); \n                this.setState( { country: item.country } );         \n              }\n           });\n            \n         \n      }else{\n        toast.error(nextProps.apiRes.errorMessage, {\n          position: \"top-right\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        });\n      }\n\n      this.setState({submitStatus:false});\n    }\n  }\n\n\n\n  render() {\n   \n    const { name, address, client_code, country, client_id, submitStatus } = this.state;\n    return (\n      <>\n        <CRow>\n          <CCol xs=\"12\" md=\"12\">\n            <CCard>\n              <CCardHeader style={{display:'flex',justifyContent:'space-between',alignItems:'center'}}>\n                Client Details\n              </CCardHeader>\n              <CCardBody>\n                <CForm className=\"form-horizontal\">\n                    \n                    <CFormGroup row>\n                       <CCol md=\"2\">\n                         <CLabel htmlFor=\"text-input\"><b>Client Code :</b></CLabel>\n                       </CCol>\n                       <CCol xs=\"12\" md=\"\">\n                        <p>{client_code}</p>\n                         {/* <CInput type=\"text\" placeholder=\"Employee Code\" onChange={this.onChange} name=\"employee_code\" value={employee_code}/> */}\n                       </CCol>\n                     </CFormGroup>\n\n                     <CFormGroup row>\n                       <CCol md=\"2\">\n                         <CLabel htmlFor=\"text-input\"><b>Client Name :</b></CLabel>\n                       </CCol>\n                       <CCol xs=\"12\" md=\"\">\n                        <p>{name}</p>\n                         {/* <CInput type=\"text\" placeholder=\"Employee Code\" onChange={this.onChange} name=\"employee_code\" value={employee_code}/> */}\n                       </CCol>\n                     </CFormGroup>\n\n                     <CFormGroup row>\n                       <CCol md=\"2\">\n                         <CLabel htmlFor=\"text-input\"><b>Address :</b></CLabel>\n                       </CCol>\n                       <CCol xs=\"12\" md=\"\">\n                        <p>{address}</p>\n                         {/* <CInput type=\"text\" placeholder=\"Employee Code\" onChange={this.onChange} name=\"employee_code\" value={employee_code}/> */}\n                       </CCol>\n                     </CFormGroup>\n   \n                     <CFormGroup row>\n                       <CCol md=\"2\">\n                         <CLabel htmlFor=\"text-input\"><b>Country :</b></CLabel>\n                       </CCol>\n                       <CCol xs=\"12\" md=\"\">\n                        <p>{country}</p>\n                         {/* <CInput type=\"text\" placeholder=\"Employee Code\" onChange={this.onChange} name=\"employee_code\" value={employee_code}/> */}\n                       </CCol>\n                     </CFormGroup>\n\n\n                   </CForm>\n                    \n\n                   \n              </CCardBody>\n            </CCard>\n    \n          </CCol>\n        </CRow>\n\n        \n\n        <ToastContainer />\n      </>\n    );\n  }\n}\n\nProClientDetail.propTypes = {\n  listClients: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  apiRes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  apiRes: state.apiRes\n});\n\nexport default connect(\n  mapStateToProps,\n  { listClients }\n)( ProClientDetail );","/home/android03/Projects/pms-dashboard/src/views/project/Milestone.js",["721","722"],"import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport store from \"./../../store\";\nimport jwt_decode from \"jwt-decode\";\nimport { logoutUser } from \"./../../actions/authActions\";\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CForm,\n  CFormGroup,\n  CInput,\n  CLabel,\n  CRow,\n  CSelect,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react';\n\nimport { dataProjects,proMilestone } from \"../../actions/projectActions\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nclass Promilestone extends Component {\n  constructor() {\n    super();\n    this.state = {\n      token: \"\",\n      project_id:\"\",\n      name: \"\",\n      percentage:\"\",\n      realized_date:\"\",\n      realized_amount:\"\",\n      due_amount:\"\",\n      due_date:\"\",\n      status:\"\",\n      client:[],\n      submitStatus: false\n    };\n  }\n\n  componentDidMount() {\n    //console.log('path is', this.props)\n    if(localStorage.jwtToken)\n    { \n      const token = localStorage.jwtToken;\n      const decoded = jwt_decode(token);\n    \n      this.setState({ token: decoded.token });\n\n      const proData = {\n        user_type: 1,\n        token: decoded.token\n      };\n      this.props.dataProjects(proData)\n      // console.log(this.state.namedata);\n    }else{\n      store.dispatch(logoutUser());\n      this.props.history.push(\"/login\");\n    }\n  };\n\n  componentWillReceiveProps(nextProps) {\n    console.log('next props',nextProps.apiRes.data)\n    //  this.setState({ namedata: nextProps.apiRes.data})\n    //  console.log('clllllllient data ',this.state.namedata);\n    if (nextProps.apiRes) {\n      if(nextProps.apiRes.status === 200)\n      {\n        toast.success(nextProps.apiRes.data.message, {\n          position: \"top-right\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        });\n        this.setState({ project_id:\"\"});\n        this.setState({ name: \"\" });\n        this.setState({ percentage:\"\" });\n        this.setState({ due_date:\"\" });\n        this.setState({ due_amount:\"\"});\n        this.setState({ realized_amount:\"\"});\n        this.setState({ realized_date:\"\"});\n        this.setState({ status:\"\"});\n        this.setState({ client: nextProps.apiRes.data})\n\n      }else{\n        toast.error(nextProps.apiRes.errorMessage, {\n          position: \"top-right\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        });\n      }\n\n      this.setState({submitStatus:false});\n     \n    }\n    if(this.state.submitStatus === true){ \n        this.state.client.map(item =>{\n          if(item.id === parseInt(this.state.project_id)){\n            this.props.history.push(\"/project/detail/\"+item.id);\n          }\n        })\n    }\n  }\n\n  onChange = e => {\n      this.setState({ [e.target.name]: e.target.value });\n      console.log(\"value\", e.target.value)\n  };\n\n  onSubmit = e => {\n    this.setState({submitStatus:true});\n    // this.state.namedata.map((item)=>{\n    //   //console.log(item)\n    //   //console.log(this.state.client_id)\n    //   if(item.name === this.state.client_id){\n    //     console.log(item.id)\n    //     this.setState({client_id : item.id});\n    //     console.log(this.state.client_id)\n    //   }\n    // })\n\n    e.preventDefault();\n    const proData = {\n      project_id: parseInt(this.state.project_id),\n      name: this.state.name,\n      percentage: this.state.percentage,\n      due_amount: this.state.due_amount,\n      due_date: this.state.due_date,\n      realized_date: this.state.realized_date,\n      realized_amount: this.state.realized_amount,\n      status: this.state.status,\n      token: this.state.token\n    };  \n    console.log('req data is ', proData)\n    this.props.proMilestone(proData);\n    \n  };\n\n  render() {\n    const {  percentage,client, name, due_amount, due_date,realized_amount,realized_date,status, submitStatus } = this.state;\n    //console.log(manager)\n    return (\n      <>\n        <CRow>\n          <CCol xs=\"12\" md=\"12\">\n            <CCard>\n              <CCardHeader>\n                Project Milestone\n              </CCardHeader>\n              <CCardBody>\n                <CForm className=\"form-horizontal\">\n\n                       \n                 <CFormGroup row>\n                    <CCol md=\"3\">\n                      <CLabel htmlFor=\"text-input\">Project Name</CLabel>\n                    </CCol>\n                    <CCol xs=\"12\" md=\"9\">\n                      {/* <CInput type=\"text\" placeholder=\"Client Id\" onChange={this.onChange} name=\"client_id\" value={client_id}/> */}\n                      \n                      <CSelect onChange={this.onChange} name=\"project_id\">\n                          <option value=\"\" disabled selected hidden>Select Project Name</option>\n                         {\n                           this.state.client.map((item) => {\n                             //console.log(item.name)\n                              return(  <>\n                              <option value={item.id}>{item.name}</option></>)\n                           })\n                         }\n              \n                      </CSelect>\n                   \n                    </CCol>\n                  </CFormGroup>\n\n                  <CFormGroup row>\n                    <CCol md=\"3\">\n                      <CLabel htmlFor=\"text-input\">Name</CLabel>\n                    </CCol>\n                    <CCol xs=\"12\" md=\"9\">\n                      <CInput type=\"text\" placeholder=\"Name\" onChange={this.onChange} name=\"name\" value={name} required/>\n                    </CCol>\n                  </CFormGroup>\n\n                  <CFormGroup row>\n                    <CCol md=\"3\">\n                      <CLabel htmlFor=\"text-input\">Percentage</CLabel>\n                    </CCol>\n                    <CCol xs=\"12\" md=\"9\">\n                      <CInput type=\"text\" placeholder=\"Percentage\" onChange={this.onChange} name=\"percentage\" value={percentage} required/>\n                    </CCol>\n                  </CFormGroup>\n\n                  <CFormGroup row>\n                    <CCol md=\"3\">\n                      <CLabel htmlFor=\"text-input\">Due Amount</CLabel>\n                    </CCol>\n                    <CCol xs=\"12\" md=\"9\">\n                      <CInput type=\"text\" placeholder=\"Due Amount\" onChange={this.onChange} name=\"due_amount\" value={due_amount} required/>\n                    </CCol>\n                  </CFormGroup>\n\n                  <CFormGroup row>\n                    <CCol md=\"3\">\n                      <CLabel htmlFor=\"text-input\">Due Date</CLabel>\n                    </CCol>\n                    <CCol xs=\"12\" md=\"9\">\n                      <CInput type=\"text\" placeholder=\"YYYY-MM-DD\" onChange={this.onChange} name=\"due_date\" value={due_date} required/>\n                    </CCol>\n                  </CFormGroup>\n\n                  <CFormGroup row>\n                    <CCol md=\"3\">\n                      <CLabel htmlFor=\"text-input\">Realized Amount</CLabel>\n                    </CCol>\n                    <CCol xs=\"12\" md=\"9\">\n                      <CInput type=\"text\" placeholder=\"Realized Amount\" onChange={this.onChange} name=\"realized_amount\" value={realized_amount} required/>\n                    </CCol>\n                  </CFormGroup>\n\n                  <CFormGroup row>\n                    <CCol md=\"3\">\n                      <CLabel htmlFor=\"text-input\">Realized Date</CLabel>\n                    </CCol>\n                    <CCol xs=\"12\" md=\"9\">\n                      <CInput type=\"text\" placeholder=\"YYYY-MM-DD\" onChange={this.onChange} name=\"realized_date\" value={realized_date} required/>\n                    </CCol>\n                  </CFormGroup>\n\n                  <CFormGroup row>\n                    <CCol md=\"3\">\n                      <CLabel htmlFor=\"text-input\">Status</CLabel>\n                    </CCol>\n                    <CCol xs=\"12\" md=\"9\">\n                      {/* <CSelect type=\"email\" placeholder=\"Email\" onChange={this.onChange} name=\"email\" value={email}/> */}\n                      <CSelect onChange={this.onChange} name=\"status\" value={status}>\n                        <option value=\"\" disabled selected hidden>Select Status</option>\n                        <option value=\"pending\">Pending</option>\n                        <option value=\"paid\">Paid</option>\n                      </CSelect>\n                    </CCol>\n                  </CFormGroup>\n\n\n                </CForm>\n              </CCardBody>\n              <CCardFooter>\n                <CButton type=\"button\" size=\"sm\" color=\"primary\" disabled={submitStatus} onClick={this.onSubmit}><CIcon name=\"cil-scrubber\" /> Submit </CButton>\n              </CCardFooter>\n            </CCard>\n          </CCol>\n        </CRow>\n\n        <ToastContainer />\n      </>\n    );\n  }\n}\n\nPromilestone.propTypes = {\n  dataProjects: PropTypes.func.isRequired,\n  proMilestone: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  apiRes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  apiRes: state.apiRes\n});\n\nexport default connect(\n  mapStateToProps,\n  { dataProjects, proMilestone }\n)(Promilestone);","/home/android03/Projects/pms-dashboard/src/constants/index.js",[],"/home/android03/Arpit/pms-dashboard/src/index.js",[],"/home/android03/Arpit/pms-dashboard/src/store.js",[],"/home/android03/Arpit/pms-dashboard/src/reducers/index.js",[],"/home/android03/Arpit/pms-dashboard/src/serviceWorker.js",[],"/home/android03/Arpit/pms-dashboard/src/App.js",[],"/home/android03/Arpit/pms-dashboard/src/polyfill.js",[],"/home/android03/Arpit/pms-dashboard/src/reducers/apiResReducers.js",["723"],"/home/android03/Arpit/pms-dashboard/src/reducers/authReducers.js",["724"],"/home/android03/Arpit/pms-dashboard/src/assets/icons/index.js",[],"/home/android03/Arpit/pms-dashboard/src/views/pages/page500/Page500.js",[],"/home/android03/Arpit/pms-dashboard/src/views/pages/page404/Page404.js",[],"/home/android03/Arpit/pms-dashboard/src/views/pages/forgot/Forgot.js",[],"/home/android03/Arpit/pms-dashboard/src/views/pages/reset/Reset.js",[],"/home/android03/Arpit/pms-dashboard/src/actions/types.js",[],"/home/android03/Arpit/pms-dashboard/src/assets/icons/logo-negative.js",[],"/home/android03/Arpit/pms-dashboard/src/assets/icons/sygnet.js",[],"/home/android03/Arpit/pms-dashboard/src/assets/icons/logo.js",[],"/home/android03/Arpit/pms-dashboard/src/actions/authActions.js",[],"/home/android03/Arpit/pms-dashboard/src/utils/setAuthToken.js",[],"/home/android03/Arpit/pms-dashboard/src/constants/index.js",[],"/home/android03/Arpit/pms-dashboard/src/views/pages/login/Login.js",[],"/home/android03/Arpit/pms-dashboard/src/views/pages/login/Logout.js",[],"/home/android03/Arpit/pms-dashboard/src/containers/TheLayout.js",[],"/home/android03/Arpit/pms-dashboard/src/views/private-route/PrivateRoute.js",[],"/home/android03/Arpit/pms-dashboard/src/containers/index.js",[],"/home/android03/Arpit/pms-dashboard/src/containers/TheFooter.js",[],"/home/android03/Arpit/pms-dashboard/src/containers/TheContent.js",[],"/home/android03/Arpit/pms-dashboard/src/containers/TheHeaderDropdown.js",[],"/home/android03/Arpit/pms-dashboard/src/containers/TheHeader.js",[],"/home/android03/Arpit/pms-dashboard/src/containers/TheSidebar.js",[],"/home/android03/Arpit/pms-dashboard/src/containers/_nav.js",["725"],"/home/android03/Arpit/pms-dashboard/src/routes.js",[],"/home/android03/Arpit/pms-dashboard/src/views/dashboard/Dashboard.js",[],"/home/android03/Arpit/pms-dashboard/src/views/emailtemplates/Index.js",[],"/home/android03/Arpit/pms-dashboard/src/views/emailtemplates/Edit.js",[],"/home/android03/Arpit/pms-dashboard/src/views/technologies/Index.js",["726"],"/home/android03/Arpit/pms-dashboard/src/views/technologies/Edit.js",["727","728"],"/home/android03/Arpit/pms-dashboard/src/views/technologies/Add.js",[],"/home/android03/Arpit/pms-dashboard/src/views/department/Index.js",[],"/home/android03/Arpit/pms-dashboard/src/views/department/Add.js",[],"/home/android03/Arpit/pms-dashboard/src/views/skill/Index.js",[],"/home/android03/Arpit/pms-dashboard/src/views/department/Edit.js",[],"/home/android03/Arpit/pms-dashboard/src/views/skill/Add.js",[],"/home/android03/Arpit/pms-dashboard/src/views/designation/Index.js",[],"/home/android03/Arpit/pms-dashboard/src/views/skill/Edit.js",[],"/home/android03/Arpit/pms-dashboard/src/views/designation/Add.js",[],"/home/android03/Arpit/pms-dashboard/src/views/designation/Edit.js",[],"/home/android03/Arpit/pms-dashboard/src/views/client/Index.js",["729"],"/home/android03/Arpit/pms-dashboard/src/views/client/Edit.js",["730","731"],"/home/android03/Arpit/pms-dashboard/src/views/client/Add.js",["732"],"/home/android03/Arpit/pms-dashboard/src/views/project/Edit.js",["733","734","735"],"/home/android03/Arpit/pms-dashboard/src/views/project/Assignuser.js",["736","737","738","739"],"/home/android03/Arpit/pms-dashboard/src/views/project/Index.js",["740","741"],"/home/android03/Arpit/pms-dashboard/src/views/project/Detail.js",["742","743","744","745","746","747","748","749","750","751"],"/home/android03/Arpit/pms-dashboard/src/views/project/Assign.js",["752","753","754"],"/home/android03/Arpit/pms-dashboard/src/views/project/Clientdetail.js",["755","756","757","758","759","760","761","762","763"],"/home/android03/Arpit/pms-dashboard/src/views/project/Milestone.js",["764","765"],"/home/android03/Arpit/pms-dashboard/src/views/project/Add.js",["766","767","768"],"/home/android03/Arpit/pms-dashboard/src/views/users/Index.js",["769","770"],"/home/android03/Arpit/pms-dashboard/src/views/users/Add.js",[],"/home/android03/Arpit/pms-dashboard/src/views/users/Edit.js",["771","772","773"],"/home/android03/Arpit/pms-dashboard/src/views/users/Assign.js",["774","775","776","777"],"/home/android03/Arpit/pms-dashboard/src/views/users/Detail.js",["778","779","780","781","782","783","784","785","786","787","788","789","790","791","792"],"/home/android03/Arpit/pms-dashboard/src/views/changepassword/Changepassword.js",[],"/home/android03/Arpit/pms-dashboard/src/views/users/Skill.js",["793","794","795","796"],"/home/android03/Arpit/pms-dashboard/src/actions/emailtempActions.js",[],"/home/android03/Arpit/pms-dashboard/src/actions/technologiesActions.js",[],"/home/android03/Arpit/pms-dashboard/src/actions/departmentActions.js",[],"/home/android03/Arpit/pms-dashboard/src/actions/usersActions.js",["797"],"/home/android03/Arpit/pms-dashboard/src/actions/projectActions.js",["798"],"/home/android03/Arpit/pms-dashboard/src/actions/changepassActions.js",[],"/home/android03/Arpit/pms-dashboard/src/actions/designationActions.js",[],"/home/android03/Arpit/pms-dashboard/src/actions/clientActions.js",["799","800"],"/home/android03/Arpit/pms-dashboard/src/actions/skillActions.js",[],"/home/android03/Arpit/pms-dashboard/src/views/charts/ChartLineSimple.js",[],"/home/android03/Arpit/pms-dashboard/src/views/charts/ChartBarSimple.js",[],{"ruleId":"801","replacedBy":"802"},{"ruleId":"803","replacedBy":"804"},{"ruleId":"805","severity":1,"message":"806","line":4,"column":1,"nodeType":"807","endLine":13,"endColumn":2},{"ruleId":"805","severity":1,"message":"806","line":13,"column":1,"nodeType":"807","endLine":39,"endColumn":2},{"ruleId":"801","replacedBy":"808"},{"ruleId":"803","replacedBy":"809"},{"ruleId":"810","severity":1,"message":"811","line":18,"column":3,"nodeType":"812","messageId":"813","endLine":18,"endColumn":9},{"ruleId":"814","severity":1,"message":"815","line":69,"column":44,"nodeType":"816","messageId":"817","endLine":69,"endColumn":46},{"ruleId":"818","severity":1,"message":"819","line":71,"column":23,"nodeType":"820","messageId":"821","endLine":71,"endColumn":25},{"ruleId":"810","severity":1,"message":"811","line":18,"column":3,"nodeType":"812","messageId":"813","endLine":18,"endColumn":9},{"ruleId":"822","severity":1,"message":"823","line":71,"column":32,"nodeType":"816","messageId":"824","endLine":79,"endColumn":14},{"ruleId":"814","severity":1,"message":"815","line":71,"column":38,"nodeType":"816","messageId":"817","endLine":71,"endColumn":40},{"ruleId":"810","severity":1,"message":"825","line":3,"column":8,"nodeType":"812","messageId":"813","endLine":3,"endColumn":17},{"ruleId":"810","severity":1,"message":"826","line":5,"column":8,"nodeType":"812","messageId":"813","endLine":5,"endColumn":17},{"ruleId":"818","severity":1,"message":"819","line":79,"column":48,"nodeType":"820","messageId":"821","endLine":79,"endColumn":50},{"ruleId":"810","severity":1,"message":"827","line":143,"column":79,"nodeType":"812","messageId":"813","endLine":143,"endColumn":87},{"ruleId":"810","severity":1,"message":"828","line":19,"column":3,"nodeType":"812","messageId":"813","endLine":19,"endColumn":10},{"ruleId":"818","severity":1,"message":"819","line":75,"column":57,"nodeType":"820","messageId":"821","endLine":75,"endColumn":59},{"ruleId":"810","severity":1,"message":"811","line":18,"column":3,"nodeType":"812","messageId":"813","endLine":18,"endColumn":9},{"ruleId":"810","severity":1,"message":"828","line":19,"column":3,"nodeType":"812","messageId":"813","endLine":19,"endColumn":10},{"ruleId":"810","severity":1,"message":"825","line":3,"column":8,"nodeType":"812","messageId":"813","endLine":3,"endColumn":17},{"ruleId":"818","severity":1,"message":"819","line":221,"column":45,"nodeType":"820","messageId":"821","endLine":221,"endColumn":47},{"ruleId":"810","severity":1,"message":"811","line":18,"column":3,"nodeType":"812","messageId":"813","endLine":18,"endColumn":9},{"ruleId":"814","severity":1,"message":"815","line":72,"column":28,"nodeType":"816","messageId":"817","endLine":72,"endColumn":30},{"ruleId":"810","severity":1,"message":"829","line":148,"column":13,"nodeType":"812","messageId":"813","endLine":148,"endColumn":22},{"ruleId":"810","severity":1,"message":"830","line":148,"column":57,"nodeType":"812","messageId":"813","endLine":148,"endColumn":65},{"ruleId":"810","severity":1,"message":"831","line":148,"column":67,"nodeType":"812","messageId":"813","endLine":148,"endColumn":74},{"ruleId":"810","severity":1,"message":"829","line":160,"column":13,"nodeType":"812","messageId":"813","endLine":160,"endColumn":22},{"ruleId":"810","severity":1,"message":"832","line":160,"column":44,"nodeType":"812","messageId":"813","endLine":160,"endColumn":55},{"ruleId":"814","severity":1,"message":"833","line":224,"column":46,"nodeType":"816","messageId":"834","endLine":224,"endColumn":48},{"ruleId":"810","severity":1,"message":"825","line":3,"column":8,"nodeType":"812","messageId":"813","endLine":3,"endColumn":17},{"ruleId":"810","severity":1,"message":"835","line":16,"column":3,"nodeType":"812","messageId":"813","endLine":16,"endColumn":9},{"ruleId":"814","severity":1,"message":"815","line":108,"column":36,"nodeType":"816","messageId":"817","endLine":108,"endColumn":38},{"ruleId":"810","severity":1,"message":"836","line":138,"column":13,"nodeType":"812","messageId":"813","endLine":138,"endColumn":20},{"ruleId":"810","severity":1,"message":"837","line":138,"column":22,"nodeType":"812","messageId":"813","endLine":138,"endColumn":32},{"ruleId":"810","severity":1,"message":"826","line":5,"column":8,"nodeType":"812","messageId":"813","endLine":5,"endColumn":17},{"ruleId":"810","severity":1,"message":"838","line":12,"column":3,"nodeType":"812","messageId":"813","endLine":12,"endColumn":14},{"ruleId":"810","severity":1,"message":"835","line":17,"column":3,"nodeType":"812","messageId":"813","endLine":17,"endColumn":9},{"ruleId":"810","severity":1,"message":"828","line":20,"column":3,"nodeType":"812","messageId":"813","endLine":20,"endColumn":10},{"ruleId":"810","severity":1,"message":"839","line":23,"column":8,"nodeType":"812","messageId":"813","endLine":23,"endColumn":13},{"ruleId":"818","severity":1,"message":"819","line":86,"column":48,"nodeType":"820","messageId":"821","endLine":86,"endColumn":50},{"ruleId":"822","severity":1,"message":"840","line":88,"column":58,"nodeType":"816","messageId":"824","endLine":96,"endColumn":17},{"ruleId":"814","severity":1,"message":"815","line":88,"column":67,"nodeType":"816","messageId":"817","endLine":88,"endColumn":69},{"ruleId":"822","severity":1,"message":"823","line":98,"column":56,"nodeType":"816","messageId":"824","endLine":107,"endColumn":17},{"ruleId":"814","severity":1,"message":"815","line":98,"column":65,"nodeType":"816","messageId":"817","endLine":98,"endColumn":67},{"ruleId":"810","severity":1,"message":"841","line":203,"column":52,"nodeType":"812","messageId":"813","endLine":203,"endColumn":63},{"ruleId":"810","severity":1,"message":"842","line":203,"column":74,"nodeType":"812","messageId":"813","endLine":203,"endColumn":82},{"ruleId":"810","severity":1,"message":"843","line":203,"column":84,"nodeType":"812","messageId":"813","endLine":203,"endColumn":91},{"ruleId":"810","severity":1,"message":"844","line":203,"column":93,"nodeType":"812","messageId":"813","endLine":203,"endColumn":101},{"ruleId":"810","severity":1,"message":"845","line":203,"column":103,"nodeType":"812","messageId":"813","endLine":203,"endColumn":115},{"ruleId":"810","severity":1,"message":"835","line":16,"column":3,"nodeType":"812","messageId":"813","endLine":16,"endColumn":9},{"ruleId":"814","severity":1,"message":"815","line":110,"column":36,"nodeType":"816","messageId":"817","endLine":110,"endColumn":38},{"ruleId":"810","severity":1,"message":"836","line":141,"column":13,"nodeType":"812","messageId":"813","endLine":141,"endColumn":20},{"ruleId":"810","severity":1,"message":"837","line":141,"column":22,"nodeType":"812","messageId":"813","endLine":141,"endColumn":32},{"ruleId":"810","severity":1,"message":"826","line":5,"column":8,"nodeType":"812","messageId":"813","endLine":5,"endColumn":17},{"ruleId":"810","severity":1,"message":"838","line":12,"column":3,"nodeType":"812","messageId":"813","endLine":12,"endColumn":14},{"ruleId":"810","severity":1,"message":"835","line":17,"column":3,"nodeType":"812","messageId":"813","endLine":17,"endColumn":9},{"ruleId":"810","severity":1,"message":"828","line":20,"column":3,"nodeType":"812","messageId":"813","endLine":20,"endColumn":10},{"ruleId":"810","severity":1,"message":"839","line":23,"column":8,"nodeType":"812","messageId":"813","endLine":23,"endColumn":13},{"ruleId":"818","severity":1,"message":"819","line":83,"column":41,"nodeType":"820","messageId":"821","endLine":83,"endColumn":43},{"ruleId":"814","severity":1,"message":"815","line":85,"column":64,"nodeType":"816","messageId":"817","endLine":85,"endColumn":66},{"ruleId":"814","severity":1,"message":"815","line":96,"column":62,"nodeType":"816","messageId":"817","endLine":96,"endColumn":64},{"ruleId":"810","severity":1,"message":"846","line":163,"column":61,"nodeType":"812","messageId":"813","endLine":163,"endColumn":70},{"ruleId":"810","severity":1,"message":"845","line":163,"column":72,"nodeType":"812","messageId":"813","endLine":163,"endColumn":84},{"ruleId":"814","severity":1,"message":"815","line":108,"column":35,"nodeType":"816","messageId":"817","endLine":108,"endColumn":37},{"ruleId":"810","severity":1,"message":"847","line":138,"column":13,"nodeType":"812","messageId":"813","endLine":138,"endColumn":26},{"ruleId":"810","severity":1,"message":"837","line":138,"column":28,"nodeType":"812","messageId":"813","endLine":138,"endColumn":38},{"ruleId":"810","severity":1,"message":"835","line":16,"column":3,"nodeType":"812","messageId":"813","endLine":16,"endColumn":9},{"ruleId":"814","severity":1,"message":"815","line":109,"column":35,"nodeType":"816","messageId":"817","endLine":109,"endColumn":37},{"ruleId":"810","severity":1,"message":"836","line":139,"column":13,"nodeType":"812","messageId":"813","endLine":139,"endColumn":20},{"ruleId":"810","severity":1,"message":"837","line":139,"column":22,"nodeType":"812","messageId":"813","endLine":139,"endColumn":32},{"ruleId":"810","severity":1,"message":"848","line":8,"column":3,"nodeType":"812","messageId":"813","endLine":8,"endColumn":10},{"ruleId":"810","severity":1,"message":"838","line":11,"column":3,"nodeType":"812","messageId":"813","endLine":11,"endColumn":14},{"ruleId":"810","severity":1,"message":"835","line":16,"column":3,"nodeType":"812","messageId":"813","endLine":16,"endColumn":9},{"ruleId":"810","severity":1,"message":"828","line":19,"column":3,"nodeType":"812","messageId":"813","endLine":19,"endColumn":10},{"ruleId":"810","severity":1,"message":"849","line":20,"column":3,"nodeType":"812","messageId":"813","endLine":20,"endColumn":13},{"ruleId":"814","severity":1,"message":"815","line":72,"column":44,"nodeType":"816","messageId":"817","endLine":72,"endColumn":46},{"ruleId":"818","severity":1,"message":"819","line":73,"column":24,"nodeType":"820","messageId":"821","endLine":73,"endColumn":26},{"ruleId":"810","severity":1,"message":"829","line":102,"column":50,"nodeType":"812","messageId":"813","endLine":102,"endColumn":59},{"ruleId":"810","severity":1,"message":"845","line":102,"column":61,"nodeType":"812","messageId":"813","endLine":102,"endColumn":73},{"ruleId":"814","severity":1,"message":"815","line":108,"column":36,"nodeType":"816","messageId":"817","endLine":108,"endColumn":38},{"ruleId":"810","severity":1,"message":"850","line":151,"column":25,"nodeType":"812","messageId":"813","endLine":151,"endColumn":31},{"ruleId":"805","severity":1,"message":"806","line":4,"column":1,"nodeType":"807","endLine":13,"endColumn":2},{"ruleId":"805","severity":1,"message":"806","line":13,"column":1,"nodeType":"807","endLine":39,"endColumn":2},{"ruleId":"810","severity":1,"message":"851","line":2,"column":8,"nodeType":"812","messageId":"813","endLine":2,"endColumn":18},{"ruleId":"810","severity":1,"message":"811","line":18,"column":3,"nodeType":"812","messageId":"813","endLine":18,"endColumn":9},{"ruleId":"814","severity":1,"message":"815","line":69,"column":44,"nodeType":"816","messageId":"817","endLine":69,"endColumn":46},{"ruleId":"818","severity":1,"message":"819","line":71,"column":23,"nodeType":"820","messageId":"821","endLine":71,"endColumn":25},{"ruleId":"810","severity":1,"message":"811","line":18,"column":3,"nodeType":"812","messageId":"813","endLine":18,"endColumn":9},{"ruleId":"810","severity":1,"message":"828","line":19,"column":3,"nodeType":"812","messageId":"813","endLine":19,"endColumn":10},{"ruleId":"818","severity":1,"message":"819","line":75,"column":57,"nodeType":"820","messageId":"821","endLine":75,"endColumn":59},{"ruleId":"810","severity":1,"message":"828","line":19,"column":3,"nodeType":"812","messageId":"813","endLine":19,"endColumn":10},{"ruleId":"810","severity":1,"message":"829","line":160,"column":13,"nodeType":"812","messageId":"813","endLine":160,"endColumn":22},{"ruleId":"810","severity":1,"message":"832","line":160,"column":44,"nodeType":"812","messageId":"813","endLine":160,"endColumn":55},{"ruleId":"814","severity":1,"message":"833","line":224,"column":46,"nodeType":"816","messageId":"834","endLine":224,"endColumn":48},{"ruleId":"810","severity":1,"message":"835","line":16,"column":3,"nodeType":"812","messageId":"813","endLine":16,"endColumn":9},{"ruleId":"814","severity":1,"message":"815","line":109,"column":35,"nodeType":"816","messageId":"817","endLine":109,"endColumn":37},{"ruleId":"810","severity":1,"message":"836","line":139,"column":13,"nodeType":"812","messageId":"813","endLine":139,"endColumn":20},{"ruleId":"810","severity":1,"message":"837","line":139,"column":22,"nodeType":"812","messageId":"813","endLine":139,"endColumn":32},{"ruleId":"810","severity":1,"message":"811","line":18,"column":3,"nodeType":"812","messageId":"813","endLine":18,"endColumn":9},{"ruleId":"814","severity":1,"message":"815","line":72,"column":28,"nodeType":"816","messageId":"817","endLine":72,"endColumn":30},{"ruleId":"810","severity":1,"message":"826","line":5,"column":8,"nodeType":"812","messageId":"813","endLine":5,"endColumn":17},{"ruleId":"810","severity":1,"message":"838","line":12,"column":3,"nodeType":"812","messageId":"813","endLine":12,"endColumn":14},{"ruleId":"810","severity":1,"message":"835","line":17,"column":3,"nodeType":"812","messageId":"813","endLine":17,"endColumn":9},{"ruleId":"810","severity":1,"message":"828","line":20,"column":3,"nodeType":"812","messageId":"813","endLine":20,"endColumn":10},{"ruleId":"810","severity":1,"message":"839","line":23,"column":8,"nodeType":"812","messageId":"813","endLine":23,"endColumn":13},{"ruleId":"818","severity":1,"message":"819","line":83,"column":41,"nodeType":"820","messageId":"821","endLine":83,"endColumn":43},{"ruleId":"814","severity":1,"message":"815","line":85,"column":64,"nodeType":"816","messageId":"817","endLine":85,"endColumn":66},{"ruleId":"814","severity":1,"message":"815","line":96,"column":62,"nodeType":"816","messageId":"817","endLine":96,"endColumn":64},{"ruleId":"810","severity":1,"message":"846","line":163,"column":61,"nodeType":"812","messageId":"813","endLine":163,"endColumn":70},{"ruleId":"810","severity":1,"message":"845","line":163,"column":72,"nodeType":"812","messageId":"813","endLine":163,"endColumn":84},{"ruleId":"814","severity":1,"message":"815","line":108,"column":35,"nodeType":"816","messageId":"817","endLine":108,"endColumn":37},{"ruleId":"810","severity":1,"message":"847","line":138,"column":13,"nodeType":"812","messageId":"813","endLine":138,"endColumn":26},{"ruleId":"810","severity":1,"message":"837","line":138,"column":28,"nodeType":"812","messageId":"813","endLine":138,"endColumn":38},{"ruleId":"810","severity":1,"message":"848","line":8,"column":3,"nodeType":"812","messageId":"813","endLine":8,"endColumn":10},{"ruleId":"810","severity":1,"message":"838","line":11,"column":3,"nodeType":"812","messageId":"813","endLine":11,"endColumn":14},{"ruleId":"810","severity":1,"message":"835","line":16,"column":3,"nodeType":"812","messageId":"813","endLine":16,"endColumn":9},{"ruleId":"810","severity":1,"message":"828","line":19,"column":3,"nodeType":"812","messageId":"813","endLine":19,"endColumn":10},{"ruleId":"810","severity":1,"message":"849","line":20,"column":3,"nodeType":"812","messageId":"813","endLine":20,"endColumn":13},{"ruleId":"814","severity":1,"message":"815","line":72,"column":44,"nodeType":"816","messageId":"817","endLine":72,"endColumn":46},{"ruleId":"818","severity":1,"message":"819","line":73,"column":24,"nodeType":"820","messageId":"821","endLine":73,"endColumn":26},{"ruleId":"810","severity":1,"message":"829","line":102,"column":50,"nodeType":"812","messageId":"813","endLine":102,"endColumn":59},{"ruleId":"810","severity":1,"message":"845","line":102,"column":61,"nodeType":"812","messageId":"813","endLine":102,"endColumn":73},{"ruleId":"814","severity":1,"message":"815","line":108,"column":36,"nodeType":"816","messageId":"817","endLine":108,"endColumn":38},{"ruleId":"810","severity":1,"message":"850","line":151,"column":25,"nodeType":"812","messageId":"813","endLine":151,"endColumn":31},{"ruleId":"810","severity":1,"message":"829","line":148,"column":13,"nodeType":"812","messageId":"813","endLine":148,"endColumn":22},{"ruleId":"810","severity":1,"message":"830","line":148,"column":57,"nodeType":"812","messageId":"813","endLine":148,"endColumn":65},{"ruleId":"810","severity":1,"message":"831","line":148,"column":67,"nodeType":"812","messageId":"813","endLine":148,"endColumn":74},{"ruleId":"810","severity":1,"message":"811","line":18,"column":3,"nodeType":"812","messageId":"813","endLine":18,"endColumn":9},{"ruleId":"810","severity":1,"message":"852","line":61,"column":5,"nodeType":"812","messageId":"813","endLine":61,"endColumn":14},{"ruleId":"810","severity":1,"message":"826","line":5,"column":8,"nodeType":"812","messageId":"813","endLine":5,"endColumn":17},{"ruleId":"818","severity":1,"message":"819","line":79,"column":48,"nodeType":"820","messageId":"821","endLine":79,"endColumn":50},{"ruleId":"810","severity":1,"message":"827","line":143,"column":79,"nodeType":"812","messageId":"813","endLine":143,"endColumn":87},{"ruleId":"810","severity":1,"message":"835","line":16,"column":3,"nodeType":"812","messageId":"813","endLine":16,"endColumn":9},{"ruleId":"814","severity":1,"message":"815","line":108,"column":36,"nodeType":"816","messageId":"817","endLine":108,"endColumn":38},{"ruleId":"810","severity":1,"message":"836","line":138,"column":13,"nodeType":"812","messageId":"813","endLine":138,"endColumn":20},{"ruleId":"810","severity":1,"message":"837","line":138,"column":22,"nodeType":"812","messageId":"813","endLine":138,"endColumn":32},{"ruleId":"810","severity":1,"message":"826","line":5,"column":8,"nodeType":"812","messageId":"813","endLine":5,"endColumn":17},{"ruleId":"810","severity":1,"message":"838","line":12,"column":3,"nodeType":"812","messageId":"813","endLine":12,"endColumn":14},{"ruleId":"810","severity":1,"message":"835","line":17,"column":3,"nodeType":"812","messageId":"813","endLine":17,"endColumn":9},{"ruleId":"810","severity":1,"message":"828","line":20,"column":3,"nodeType":"812","messageId":"813","endLine":20,"endColumn":10},{"ruleId":"810","severity":1,"message":"839","line":23,"column":8,"nodeType":"812","messageId":"813","endLine":23,"endColumn":13},{"ruleId":"818","severity":1,"message":"819","line":86,"column":48,"nodeType":"820","messageId":"821","endLine":86,"endColumn":50},{"ruleId":"822","severity":1,"message":"840","line":88,"column":58,"nodeType":"816","messageId":"824","endLine":96,"endColumn":17},{"ruleId":"814","severity":1,"message":"815","line":88,"column":67,"nodeType":"816","messageId":"817","endLine":88,"endColumn":69},{"ruleId":"822","severity":1,"message":"823","line":98,"column":56,"nodeType":"816","messageId":"824","endLine":107,"endColumn":17},{"ruleId":"814","severity":1,"message":"815","line":98,"column":65,"nodeType":"816","messageId":"817","endLine":98,"endColumn":67},{"ruleId":"810","severity":1,"message":"841","line":203,"column":52,"nodeType":"812","messageId":"813","endLine":203,"endColumn":63},{"ruleId":"810","severity":1,"message":"842","line":203,"column":74,"nodeType":"812","messageId":"813","endLine":203,"endColumn":82},{"ruleId":"810","severity":1,"message":"843","line":203,"column":84,"nodeType":"812","messageId":"813","endLine":203,"endColumn":91},{"ruleId":"810","severity":1,"message":"844","line":203,"column":93,"nodeType":"812","messageId":"813","endLine":203,"endColumn":101},{"ruleId":"810","severity":1,"message":"845","line":203,"column":103,"nodeType":"812","messageId":"813","endLine":203,"endColumn":115},{"ruleId":"810","severity":1,"message":"835","line":16,"column":3,"nodeType":"812","messageId":"813","endLine":16,"endColumn":9},{"ruleId":"814","severity":1,"message":"815","line":110,"column":36,"nodeType":"816","messageId":"817","endLine":110,"endColumn":38},{"ruleId":"810","severity":1,"message":"836","line":141,"column":13,"nodeType":"812","messageId":"813","endLine":141,"endColumn":20},{"ruleId":"810","severity":1,"message":"837","line":141,"column":22,"nodeType":"812","messageId":"813","endLine":141,"endColumn":32},{"ruleId":"810","severity":1,"message":"825","line":3,"column":8,"nodeType":"812","messageId":"813","endLine":3,"endColumn":17},{"ruleId":"810","severity":1,"message":"825","line":3,"column":8,"nodeType":"812","messageId":"813","endLine":3,"endColumn":17},{"ruleId":"810","severity":1,"message":"825","line":3,"column":8,"nodeType":"812","messageId":"813","endLine":3,"endColumn":17},{"ruleId":"818","severity":1,"message":"819","line":221,"column":45,"nodeType":"820","messageId":"821","endLine":221,"endColumn":47},"no-native-reassign",["853"],"no-negated-in-lhs",["854"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration",["853"],["854"],"no-unused-vars","'CLabel' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'skillData'.","unsafeRefs","'PropTypes' is defined but never used.","'ChipInput' is defined but never used.","'projects' is assigned a value but never used.","'CSelect' is defined but never used.","'client_id' is assigned a value but never used.","'namedata' is assigned a value but never used.","'manager' is assigned a value but never used.","'assigned_to' is assigned a value but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'CInput' is defined but never used.","'user_id' is assigned a value but never used.","'project_id' is assigned a value but never used.","'CCardFooter' is defined but never used.","'CIcon' is defined but never used.","Function declared in a loop contains unsafe references to variable(s) 'projectData'.","'projects_id' is assigned a value but never used.","'resource' is assigned a value but never used.","'proinfo' is assigned a value but never used.","'userinfo' is assigned a value but never used.","'submitStatus' is assigned a value but never used.","'user_type' is assigned a value but never used.","'technology_id' is assigned a value but never used.","'CButton' is defined but never used.","'CDataTable' is defined but never used.","'client' is assigned a value but never used.","'jwt_decode' is defined but never used.","'skillData' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]